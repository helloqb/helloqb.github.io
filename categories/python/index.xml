<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on 哲学家</title>
    <link>https://helloqb.xyz/categories/python.html</link>
    <description>Recent content in Python on 哲学家</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>©DRay. 本站遵循 CC-BY-NC 4.0 协议</copyright>
    <lastBuildDate>Wed, 28 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://helloqb.xyz/categories/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>进一步了解 RabbitMQ 跨语言通讯</title>
      <link>https://helloqb.xyz/post/2021/0728_rabbitmq.html</link>
      <pubDate>Wed, 28 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://helloqb.xyz/post/2021/0728_rabbitmq.html</guid>
      <description>进一步了解 开发中遇到了 RabbitMQ 丢失的情况，另外一端一直说是我的 Java 端的问题，无奈做了验证，本文的主要内容也就是这个：如何验证消息发送成功。
配置 pom.xml 文件中添加依赖。
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-amqp&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; application.yml 文件中添加配置开启确认。
spring:rabbitmq:host:192.168.0.102port:5672username:adminpassword:adminvirtual-host:slpublisher-confirm-type:correlatedpublisher-returns:truetemplate:mandatory:true重写方法 RabbitTemplate.ConfirmCallback 确认消息是否到达交换机， RabbitTemplate.ReturnCallback 确认消息是否到达队列中。
import org.slf4j.Logger; import org.slf4j.LoggerFactory; import org.springframework.amqp.core.Message; import org.springframework.amqp.rabbit.connection.CorrelationData; import org.springframework.amqp.rabbit.core.RabbitTemplate; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.stereotype.Component; import javax.annotation.PostConstruct; @Component public class CustomRabbitSend implements RabbitTemplate.ConfirmCallback, RabbitTemplate.ReturnCallback { private static final Logger LOG = LoggerFactory.getLogger(CustomRabbitSend.class); @Autowired private RabbitTemplate rabbitTemplate; @PostConstruct public void init(){ rabbitTemplate.setConfirmCallback(this); rabbitTemplate.setReturnCallback(this); } @Override public void confirm(CorrelationData correlationData, boolean b, String s) { //到达Exchange交换机，会调用此方法  if (!</description>
    </item>
    
    <item>
      <title>RabbitMQ 实现跨语言通信</title>
      <link>https://helloqb.xyz/post/2021/0515_rabbitmq.html</link>
      <pubDate>Sat, 15 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://helloqb.xyz/post/2021/0515_rabbitmq.html</guid>
      <description>需求场景 做项目时遇到需要 Java 和 Python 通信的场景，摸索到了三种解决方案，并都正式在项目中实施过、踩坑过、改进过、整个推翻替换过。
其中 RabbitMQ 是我最终的方案，所以会重点阐述，其中略带提一下。
三种方式的实现 1. 直接调用 有 ProcessBuilder 和 Runtime.exec() 两种方法，用法差不多，都可以传一个字符串数组。
String[] command = new String[]{&amp;#34;python&amp;#34;, &amp;#34;C:\\Users\\lenovo\\Desktop\\java2python.py&amp;#34;}; proc = Runtime.getRuntime().exec(command);// 执行py文件 ProcessBuilder 可以是列表，官方推荐 ProcessBuilder。
List&amp;lt;String&amp;gt; command = new ArrayList&amp;lt;&amp;gt;(); command.add(&amp;#34;python&amp;#34;); command.add(&amp;#34;C:\\Users\\lenovo\\Desktop\\java2python.py&amp;#34;); ProcessBuilder pb = new ProcessBuilder(command); proc = pb.start(); Process 提供 InputStream 和 ErrorStream 接收返回结果；为方便起见，可以将错误流重定向到输入流。
pb.redirectErrorStream(true);//错误流重定向 BufferedReader in = new BufferedReader(new InputStreamReader(proc.getInputStream())); 若需要立即获取其返回结果，需要用 waitFor() 方法。
//导致当前线程等待，如有必要，直到由此Process对象表示的进程已终止 code = proc.waitFor(); 坑不坑：
 Java 自带，开发方便（这个很重要&amp;hellip;&amp;hellip;老板就给你两天时间你能怎么办）。 作为一个进程开启，效率低，好在是官方类，使用时感觉控制的还行。 返回结果难以接收。可以通过输入流或者写入文件读取，但是都很不好。 目前只尝试了 Java 调用 Python，反过来感觉很难。  完整代码如下：</description>
    </item>
    
    <item>
      <title>Selenium 模拟浏览器另存为</title>
      <link>https://helloqb.xyz/post/2020/0805_selenium.html</link>
      <pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://helloqb.xyz/post/2020/0805_selenium.html</guid>
      <description>缘由 开发一个下载图片的爬虫，原网站时不时变动，导致爬虫经常会挂掉，尤其在最终下载图片的环节。想着模拟浏览器另存为的方式可能会更健壮些，不那么容易挂。另外也一直想学习下 Selenium。
Selenium 1. 驱动和环境 使用的是 Python 环境，Selenium 的安装直接 pip install selenium 即可。
浏览器使用的是 Firefox，驱动是 geckdriver。将下载后的文件放入到 Firefox 安装目录下，如 C:\Program Files\Mozilla Firefox。
环境变量的配置也是 Firefox 安装目录，而不需要到文件。这里坑了好久，一直报找不到驱动的错误，原因是写成了 C:\Program Files\Mozilla Firefox\geckdriver.exe。
2. 请求网站 以掘金网站博客 cxuan读者的外包面试之旅 为例。
driver = webdriver.Firefox() driver.get(&amp;#34;https://juejin.im/post/6857394127064006663&amp;#34;) 此时没有问题的话，浏览器会自动打开网站。
3. 滚动加载 此时若直接获取图片，只会获取获取到一两张。因为大多数网站采用 Ajax 方式，页面滚动到图片才加载，所有就需要模拟页面滚动了。execute_script 方法调用 js 可实现滚动操作。
# 获取内容高度 all_height = driver.execute_script(&amp;#34;return document.body.scrollHeight&amp;#34;) # 循环往下滚动，每次滚1024高，间隔1秒 scroll_height = 1024 for i in range(int(all_height/scroll_height)): driver.execute_script(&amp;#34;window.scrollTo(0, {0});&amp;#34;.format(i*scroll_height)) time.sleep(1) 如果遇到无限加载的页面，可以参考 stackoverflow 的 回答。代码如下：
SCROLL_PAUSE_TIME = 0.</description>
    </item>
    
    <item>
      <title>锤子阅读文章搜索</title>
      <link>https://helloqb.xyz/post/2020/0311_python.html</link>
      <pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://helloqb.xyz/post/2020/0311_python.html</guid>
      <description>缘由  之前找大象公会一篇文章，在公众号里被屏蔽了，发现锤子阅读里的竟然还可以看，可能存到自己的服务器上了吧。以后文章封了可以在这里找找。 锤子阅读不支持文章搜索，有时候想要找个文章难。 划水好无聊。  脚本调用 使用 Python3 编写，单个文件，无第三方库。结果有命令行和文本两种输出方式，具体参数如下：
 -h 帮助文档 -s 订阅号名称 -k 搜索关键词，不填返回最新的文章 -n 返回文章数，默认10 -m 搜索匹配等级，默认1匹配标题 2匹配标题和摘要 -o 输出方式， 默认1命令行输出 2写入本地文件到当前目录  代码 就 200 行代码，直接贴出来了，不放到 Github 上了。
附锤子阅读APP下载 链接
import requests import sys import getopt PAGE_SIZE = 100 TEMP_FILE = &amp;#39;result.md&amp;#39; def api_site_articles(site_id, offset, page_size): &amp;#34;&amp;#34;&amp;#34;订阅号文章列表的接口json返回结果 :param site_id: :param offset: :param page_size: :return: &amp;#34;&amp;#34;&amp;#34; params = { &amp;#39;site_id&amp;#39;: site_id, &amp;#39;offset&amp;#39;: offset, &amp;#39;page_size&amp;#39;: page_size } url = r&amp;#39;http://reader.</description>
    </item>
    
  </channel>
</rss>
