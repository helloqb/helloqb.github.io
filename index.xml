<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>哲学家</title>
    <link>https://helloqb.xyz/</link>
    <description>Recent content on 哲学家</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>©DRay. 本站遵循 CC-BY-NC 4.0 协议</copyright>
    <lastBuildDate>Mon, 31 May 2021 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://helloqb.xyz/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>TCPDUMP 抓包和 Wireshark 分析</title>
        <link>https://helloqb.xyz/post/2021/0531_tcpdump.html</link>
        <pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate>
        
        <guid>https://helloqb.xyz/post/2021/0531_tcpdump.html</guid>
        <description>哲学家 https://helloqb.xyz/post/2021/0531_tcpdump.html -&lt;h1 id=&#34;tcpdump-抓包并保存到文件中&#34;&gt;tcpdump 抓包并保存到文件中&lt;/h1&gt;
&lt;p&gt;常见命令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i eth0&lt;/code&gt;：指明 eth0 网卡&lt;/li&gt;
&lt;li&gt;&lt;code&gt;host hostname&lt;/code&gt;：截获指定 hostname 发出和接收的所有数据&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;：截获发出的所有数据&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dst&lt;/code&gt;：截获接收的所有数据&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w&lt;/code&gt;：保存为文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于工作中既需要将 tcpdump 的结果打印，又需要将结果保存供 Wireshark 分析，搜索许久后终于实现了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;tcpdump -s &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; -U -w - | tee target.&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;$(&lt;/span&gt;date +%Y-%m-%d-%H-%M-%S&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;)&lt;/span&gt;.pcap | tcpdump -r -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;center&gt;&lt;img src=&#34;https://dsm01pap001files.storage.live.com/y4mM2NLbzm5DfS6jvX_cbvJjgw_ALjSKDDZxIySehgHyEAx3llL3pMzXAH99MiGQH7KRzOiRGGC-oVddz6ReDA4-xVnBXgnD9Ej97hNqH2qyXA8-rA_OLUTNAefaC1lUT80VJC0T8MgeECoFhGOx1xYKM-k0BTlrTP4BC4BeTAhoQvSPvo3rZOYFeMCOTibnlDw?width=708&amp;height=383&amp;cropmode=none&#34; /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-w&lt;/code&gt;：告诉 tcpdump 将二进制数据写入 stdout&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s 0&lt;/code&gt;：抓取完整的数据包&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tee&lt;/code&gt;：将该二进制数据写入文件并写入其自己的 stdout&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;：告诉第二个 tcpdump 从它的数据中获取它的数据 stdin&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-U&lt;/code&gt;：使数据包在收到后立即写入&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;docker-容器内抓包&#34;&gt;docker 容器内抓包&lt;/h1&gt;
&lt;p&gt;项目采用 docker 部署的时候，若不指明网卡则可能得不到想要的结果，有三种方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;直接进入容器&lt;/li&gt;
&lt;li&gt;找到容器对应的虚拟网卡，参数 &lt;code&gt;-i&lt;/code&gt; 指明网卡&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nsenter&lt;/code&gt; 命令在宿主机上进入容器的网络空间&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;第 2 种 方法参考底部链接，我个人更喜欢第 3 种方法，详细命令如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# 获取容器进程 pid&lt;/span&gt;
docker inspect --format &lt;span style=&#34;color:#666&#34;&gt;{{&lt;/span&gt;.State.Pid&lt;span style=&#34;color:#666&#34;&gt;}}&lt;/span&gt; ContainerId

&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# 进入容器的网络空间&lt;/span&gt;
nsenter -n --target pid
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此时，tcpdump 抓取的只是容器内的数据，其只对当前窗口有效。&lt;/p&gt;
&lt;h1 id=&#34;wireshark-分析-grpc-协议&#34;&gt;Wireshark 分析 grpc 协议&lt;/h1&gt;
&lt;p&gt;后续用到再补充吧，详细参考底部链接，大致步骤为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;添加 proto 文件；&lt;/li&gt;
&lt;li&gt;解码为 http2 协议&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&#34;https://dsm01pap001files.storage.live.com/y4m0as1YLEsQGj4ZDupGtRyWjkg0pfmwkfoGkBjKJ1yhMDVFgnIdQDwGO8c7QtVFc5Q0AnyNiuRz0fb6umovngRNDnhVayL6Gqs917FH-OuuODS5_Zo3sutsmXr536bO61DwCSg5LBYGsWFxlC9SKOp5x7Ji4S0Yzdt3d8gzHhuhnpodqX4UE6KKJkQQXWmI1w7?width=898&amp;height=388&amp;cropmode=none&#34; /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;h1 id=&#34;其他工具&#34;&gt;其他工具&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;工作流带宽统计：&lt;/strong&gt; &lt;code&gt;if top&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;漏洞扫描工具：&lt;/strong&gt; OWASP ZAP&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhanglonglong12.gitee.io/posts/451572563/&#34;&gt;wireshark分析grpc协议 | zhanglonglong&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/made4971/article/details/112883999&#34;&gt;tcpdump 抓取docker网络包_made4971&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://grpc.io/blog/wireshark/&#34;&gt;使用Wireshark分析gRPC消息| gRPC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.css3.io/32tcpdum+wiresharkzhua-bao-fen-xi.html&#34;&gt;tcpdum+wireshark抓包分析 | cocoo前端笔记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/25603831/how-can-i-have-tcpdump-write-to-file-and-standard-output-the-appropriate-data&#34;&gt;如何让 tcpdump 将适当的数据写入文件和标准输出- Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://helloqb.xyz/post/2021/0531_tcpdump.html - ©DRay. 本站遵循 CC-BY-NC 4.0 协议</description>
        </item>
    
    
    
        <item>
        <title>后端接口校验参数异常统一处理</title>
        <link>https://helloqb.xyz/post/2021/0201_validate.html</link>
        <pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate>
        
        <guid>https://helloqb.xyz/post/2021/0201_validate.html</guid>
        <description>哲学家 https://helloqb.xyz/post/2021/0201_validate.html -&lt;blockquote&gt;
&lt;p&gt;2021-06-01 补充：捕捉文件上传大小限制的异常和参数 key 都不传的情况。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;
&lt;p&gt;工作的项目中，先前的同事其实已经实现了参数校验异常统一处理。部分实现代码如下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//全局异常处理类
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;@RestControllerAdvice&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;GlobalExceptionHandler&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;extends&lt;/span&gt; ResponseEntityExceptionHandler &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#a2f&#34;&gt;@ExceptionHandler&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;value &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; BaseException&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; S2VJSONResult &lt;span style=&#34;color:#00f&#34;&gt;baseHandler&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;BaseException e&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; 400&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; e&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;getMessage&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;());&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//接口
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;@PostMapping&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;/transfer/company&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
S2VJSONResult &lt;span style=&#34;color:#00f&#34;&gt;transferCompany&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;@Validated&lt;/span&gt; &lt;span style=&#34;color:#a2f&#34;&gt;@RequestBody&lt;/span&gt; AdminTransferCompanyVO vo&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt;
                              BindingResult bindingResult&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;bindingResult&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;hasErrors&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; 400&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; bindingResult&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;getFieldError&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;getDefaultMessage&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;());&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//参数实体类
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;AdminTransferCompanyVO&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#a2f&#34;&gt;@NotNull&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;message &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;客户 ID 不能为空&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;private&lt;/span&gt; List&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;Integer&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; companyIds&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#a2f&#34;&gt;@NotNull&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;message &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;目标客户经理 ID 不能为空&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;private&lt;/span&gt; Integer targetCustomerId&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#a2f&#34;&gt;@NotNull&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;message &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;管理员 ID 不能为空&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;private&lt;/span&gt; Integer operationCustomerId&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//统一返回响应
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;S2VJSONResult&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;private&lt;/span&gt; Integer code&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//状态码
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;private&lt;/span&gt; Boolean isSuccess&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//状态
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;private&lt;/span&gt; String message&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//消息
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;private&lt;/span&gt; T data&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//数据对象
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;all&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;Boolean success&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; Integer code&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt;String message&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt;T data&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;new&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;success&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; code&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; message&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt;  data&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;Boolean success&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; Integer code&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt;String message&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;new&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;success&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; code&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; message&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;整理了一下其思路，大概如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;利用 &lt;code&gt;@RestControllerAdvice&lt;/code&gt; 全局处理异常&lt;/li&gt;
&lt;li&gt;Spring MVC 会将验证结果放入 &lt;code&gt;BindResult&lt;/code&gt; 中&lt;/li&gt;
&lt;li&gt;封装报错信息返回统一错误响应&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我个人很懒，感觉有些地方还是重复代码了，不够优雅，比如 &lt;code&gt;BindingResult&lt;/code&gt; 每个接口都要加，既然是异常应该就能够捕捉到，为什么不全局处理？验证的 &lt;code&gt;message&lt;/code&gt; 每个字段都要写，可否在不写的情况下，返回特定模板的报错信息？&lt;/p&gt;
&lt;h1 id=&#34;全局处理&#34;&gt;全局处理&lt;/h1&gt;
&lt;p&gt;要解决我的问题，思路也很清晰，只要知道校验失败具体抛出的是什么异常，获取异常中有用的的报错信息，然后利用 &lt;code&gt;@RestControllerAdvice&lt;/code&gt; 全局处理一下就好了。&lt;/p&gt;
&lt;p&gt;这里遇到个坑，同事写的全局处理类继承了 &lt;code&gt;ResponseEntityExceptionHandler&lt;/code&gt;，而我要特定捕捉的异常都在这里面，所以我一开始的时候，老是报重复处理异常的错误。。。&lt;/p&gt;
&lt;h2 id=&#34;1-处理-requestparam-和-pathvariable-方式&#34;&gt;1. 处理 RequestParam 和 PathVariable 方式&lt;/h2&gt;
&lt;p&gt;Controller 层代码示例如下，将需要的约束添加到 &lt;code&gt;@RequestParam&lt;/code&gt; 注解的前面，此时需要在类上添加注解 &lt;code&gt;@Validated&lt;/code&gt; 才能实现验证。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#a2f&#34;&gt;@Controller&lt;/span&gt;
&lt;span style=&#34;color:#a2f&#34;&gt;@RequestMapping&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;/report1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#a2f&#34;&gt;@ResponseBody&lt;/span&gt;
&lt;span style=&#34;color:#a2f&#34;&gt;@Validated&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;TestController&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#a2f&#34;&gt;@PostMapping&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;/test1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
    S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;test1&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;@Max&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;3&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#a2f&#34;&gt;@RequestParam&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; Integer id&lt;span style=&#34;color:#666&#34;&gt;){&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;all&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; 200&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;success&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; JSON&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;toJSONString&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;id&lt;span style=&#34;color:#666&#34;&gt;));&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#a2f&#34;&gt;@PostMapping&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;/test2/{id}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
    S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;test2&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;@Max&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;value &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; 3&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; message &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;别瞎填！&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#a2f&#34;&gt;@PathVariable&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; Integer id&lt;span style=&#34;color:#666&#34;&gt;){&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;all&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; 200&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;success&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; JSON&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;toJSONString&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;id&lt;span style=&#34;color:#666&#34;&gt;));&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这种情况会抛出 &lt;code&gt;ConstraintViolationException&lt;/code&gt; 异常。Spring 会处理这种异常并抛出报错信息，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;timestamp&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;2021-02-02 11:34:45&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;500&lt;/span&gt;,
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Internal Server Error&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;test1.id: 最大不能超过3&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;test2.id: 别瞎填！&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;/pcg/report1/test1&amp;#34;&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到 &lt;code&gt;message&lt;/code&gt; 字段中有较为完整的报错信息，可以直接拿来用。统一异常处理代码如下，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;javax.validation.ConstraintViolationException&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;  * 处理 @RequestParam @PathVariable 参数验证失败
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;  *
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;  * @param e
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;  * @return S2VJSONResult&amp;lt;T&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;  * @Author zrr
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;  * @Date 2021/2/2 10:48
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;  * @throws
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;  */&lt;/span&gt;
&lt;span style=&#34;color:#a2f&#34;&gt;@ExceptionHandler&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;value &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; ConstraintViolationException&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;handlerConstraintViolationException&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;ConstraintViolationException e&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; 400&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;参数验证未通过（&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; e&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;getMessage&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;）&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;另外，用户也存在参数 key 都不传的情况，这个时候的异常也需要捕捉。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.web.bind.MissingServletRequestParameterException&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;     * 处理 @RequestParam 参数验证失败（整个不传）
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;     * @param e
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;     * @param &amp;lt;T&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;     * @return
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;     */&lt;/span&gt;
    &lt;span style=&#34;color:#a2f&#34;&gt;@ExceptionHandler&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;value &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; MissingServletRequestParameterException&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;handlerMissingServletRequestParameterException&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;MissingServletRequestParameterException e&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; 400&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;参数验证未通过（&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; e&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;getMessage&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;）&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;封装报错信息，统一返回响应的结果如下，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;code&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;400&lt;/span&gt;,
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;isSuccess&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;false&lt;/span&gt;,
    &lt;span style=&#34;&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;参数验证未通过（test1.id: 最大不能超过3）&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;参数验证未通过（test2.id: 别瞎填！）&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;基本实现了我想要的结果，不需要通过 &lt;code&gt;BindingResult&lt;/code&gt;，只需要添加注解就可以校验参数，并且不写 &lt;code&gt;message&lt;/code&gt; 也可以返回较为清楚的报错信息。&lt;/p&gt;
&lt;p&gt;但是这只是传参的一种情况，其他的情况抛出的异常还不一样，需要再次处理。&lt;/p&gt;
&lt;h2 id=&#34;2-处理实体类接收&#34;&gt;2. 处理实体类接收&lt;/h2&gt;
&lt;p&gt;接口传入很多参数的时候，通常代码会用实体类接收。Controller 层代码示例如下，这种情况无需在类上添加注解 &lt;code&gt;@Validated&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;    &lt;span style=&#34;color:#a2f&#34;&gt;@PostMapping&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;/test3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
    S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;test3&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;@Validated&lt;/span&gt; ReportVO vo&lt;span style=&#34;color:#666&#34;&gt;){&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;all&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; 200&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;success&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; JSON&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;toJSONString&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;vo&lt;span style=&#34;color:#666&#34;&gt;));&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;实体类添加相应的约束，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;javax.validation.constraints.NotEmpty&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;javax.validation.constraints.NotNull&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;java.io.Serializable&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;ReportVO&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;implements&lt;/span&gt; Serializable &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#a2f&#34;&gt;@NotNull&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;private&lt;/span&gt; Integer cgeId&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#a2f&#34;&gt;@NotEmpty&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;message &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;baseinfoSqrxm 不能为空&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;private&lt;/span&gt; String baseinfoSqrxm&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这种情况会抛出 &lt;code&gt;BindException&lt;/code&gt; 异常。Spring 仍然会处理这种异常并抛出报错信息，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;timestamp&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;2021-02-02 13:58:18&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;400&lt;/span&gt;,
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Bad Request&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;errors&amp;#34;&lt;/span&gt;: [
        {
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;codes&amp;#34;&lt;/span&gt;: [
                &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;NotNull.reportVO.cgeId&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;NotNull.cgeId&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;NotNull.java.lang.Integer&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;NotNull&amp;#34;&lt;/span&gt;
            ],
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;arguments&amp;#34;&lt;/span&gt;: [
                {
                    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;codes&amp;#34;&lt;/span&gt;: [
                        &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;reportVO.cgeId&amp;#34;&lt;/span&gt;,
                        &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;cgeId&amp;#34;&lt;/span&gt;
                    ],
                    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;arguments&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;,
                    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;defaultMessage&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;cgeId&amp;#34;&lt;/span&gt;,
                    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;code&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;cgeId&amp;#34;&lt;/span&gt;
                }
            ],
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;defaultMessage&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;不能为null&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;objectName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;reportVO&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;field&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;cgeId&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;rejectedValue&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;,
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;bindingFailure&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;false&lt;/span&gt;,
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;code&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;NotNull&amp;#34;&lt;/span&gt;
        }
    ],
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Validation failed for object=&amp;#39;reportVO&amp;#39;. Error count: 1&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;/pcg/report1/test3&amp;#34;&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到 &lt;code&gt;defaultMessage&lt;/code&gt; 中有相应的报错信息，但是不够完整，可以将字段名 &lt;code&gt;field&lt;/code&gt; 一起拼接后作为报错信息，统一异常处理代码如下，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.validation.BindException&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;  * 处理实体校验失败（multipart/form-data、x-www-form-urlencoded）
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;  *
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;  * @param e
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;  * @return S2VJSONResult&amp;lt;T&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;  * @Author zrr
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;  * @Date 2021/2/2 10:50
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;  * @throws
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;  */&lt;/span&gt;
&lt;span style=&#34;color:#a2f&#34;&gt;@ExceptionHandler&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;value &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; BindException&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;handlerBindException&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;BindException e&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
    FieldError fieldError &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; e&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;getBindingResult&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;getFieldError&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;assert&lt;/span&gt; fieldError &lt;span style=&#34;color:#666&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
    String message &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; MessageFormat&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;参数 {0} 有误，{1}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; fieldError&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;getField&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(),&lt;/span&gt; fieldError&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;getDefaultMessage&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;());&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; 400&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; message&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其中，&lt;code&gt;e.getBindingResult()&lt;/code&gt; 中会有所有的参数报错信息，对我来说感觉一个就够了，所以我只取了一个，统一错误响应后的结果为，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;code&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;400&lt;/span&gt;,
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;isSuccess&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;false&lt;/span&gt;,
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;参数 baseinfoSqrxm 有误，baseinfoSqrxm 不能为空&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;参数 cgeId 有误，不能为null&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;3-处理-requestbody-情况&#34;&gt;3. 处理 RequestBody 情况&lt;/h2&gt;
&lt;p&gt;RequestBody 情况和上面很类似，但抛出的异常不一样，仍然需要单独处理。Controller 层代码示例如下，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#a2f&#34;&gt;@PostMapping&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;/test4&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;test4&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;@Validated&lt;/span&gt; &lt;span style=&#34;color:#a2f&#34;&gt;@RequestBody&lt;/span&gt; ReportVO vo&lt;span style=&#34;color:#666&#34;&gt;){&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;ok&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;JSON&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;toJSONString&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;vo&lt;span style=&#34;color:#666&#34;&gt;));&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这种情况会抛出 &lt;code&gt;MethodArgumentNotValidException&lt;/code&gt; 异常。默认报错消息同 &lt;code&gt;BindException&lt;/code&gt;，处理方式基本一致。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.web.bind.MethodArgumentNotValidException&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;  * 处理 @RequestBody 参数验证失败（application/json）
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;  *
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;  * @param e
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;  * @return S2VJSONResult&amp;lt;T&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;  * @Author zrr
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;  * @Date 2021/2/2 10:49
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;  * @throws
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;  */&lt;/span&gt;
&lt;span style=&#34;color:#a2f&#34;&gt;@ExceptionHandler&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;value &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; MethodArgumentNotValidException&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;handlerMethodArgumentNotValidException&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;MethodArgumentNotValidException e&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
    FieldError fieldError &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; e&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;getBindingResult&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;getFieldError&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;assert&lt;/span&gt; fieldError &lt;span style=&#34;color:#666&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
    String message &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; MessageFormat&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;参数 {0} 有误，{1}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; fieldError&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;getField&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(),&lt;/span&gt; fieldError&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;getDefaultMessage&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;());&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; 400&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; message&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这三种情况基本涵盖了传参的所有方式，后面若是有遗漏的情况，也是同样的原理，再加上就好了。&lt;/p&gt;
&lt;h2 id=&#34;4-处理集合&#34;&gt;4. 处理集合&lt;/h2&gt;
&lt;p&gt;参数是集合如 list 的时候，@Validated 失效，但 @Valid 可以支持。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;javax.validation.Valid&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;Object&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;batchUpdate&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;@RequestBody&lt;/span&gt; List&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;@Valid&lt;/span&gt; ProductModuleVO&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; list&lt;span style=&#34;color:#666&#34;&gt;){&lt;/span&gt;
    productModuleService&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;batchUpdate&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;list&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;ok&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此时，抛出的异常为 ConstraintViolationException，和第 1 种情况相同。&lt;/p&gt;
&lt;h2 id=&#34;5-处理文件上传大小异常&#34;&gt;5. 处理文件上传大小异常&lt;/h2&gt;
&lt;p&gt;可能由于没有继承 &lt;code&gt;ResponseEntityExceptionHandler&lt;/code&gt;，若是项目配置了文件上传大小限制，当超出时，系统没有捕捉异常，需要手动捕捉。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;spring&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;servlet&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;multipart&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;max-file-size&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;10MB&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.web.multipart.MaxUploadSizeExceededException&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.beans.factory.annotation.Value&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#a2f&#34;&gt;@Value&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;${spring.servlet.multipart.max-file-size}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;private&lt;/span&gt; String maxFileSize&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;    * 处理文件上传大小限制
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;    *
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;    * @param e
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;    * @return com.jztdata.pre_credit_granting.entity.S2VJSONResult&amp;lt;T&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;    * @Author zrr
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;    * @Date 2021/5/6 11:48
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;    * @throws
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;    */&lt;/span&gt;
&lt;span style=&#34;color:#a2f&#34;&gt;@ExceptionHandler&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;value &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; MaxUploadSizeExceededException&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;handlerMaxUploadSizeExceededException&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;MaxUploadSizeExceededException e&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
    logger&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;error&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;catch MaxUploadSizeExceededException {}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; e&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;getMessage&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;());&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; 400&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;文件大小超出限制（&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; maxFileSize &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;）&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;校验失败立即返回&#34;&gt;校验失败立即返回&lt;/h2&gt;
&lt;p&gt;上述三种默认情况都是校验全部字段后再返回报错信息，可以通过配置实现当一个参数校验有误时立即返回，提高效率。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.hibernate.validator.HibernateValidator&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.context.annotation.Bean&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.context.annotation.Configuration&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;javax.validation.Validation&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;javax.validation.Validator&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;javax.validation.ValidatorFactory&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt; * valid
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt; *
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt; * @author: zrr
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt; * @date: 2021/2/1 16:30
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt; */&lt;/span&gt;
&lt;span style=&#34;color:#a2f&#34;&gt;@Configuration&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;ValidConfig&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#a2f&#34;&gt;@Bean&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; Validator &lt;span style=&#34;color:#00f&#34;&gt;validator&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        ValidatorFactory validatorFactory &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Validation&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;byProvider&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt; HibernateValidator&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
                &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;configure&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;()&lt;/span&gt;
                &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;failFast&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;  &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//立即返回
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;buildValidatorFactory&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt; validatorFactory&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;getValidator&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;validated-验证组&#34;&gt;Validated 验证组&lt;/h1&gt;
&lt;p&gt;接口通常有新增和更新，它们字段一致但是约束可能不同，若想要利用同一个实体类，可以通过组的方式实现共用。注意 &lt;code&gt;@Valid&lt;/code&gt; 不支持组只有 &lt;code&gt;@Validated&lt;/code&gt; 可以。&lt;/p&gt;
&lt;p&gt;首先新增两个接口组，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;javax.validation.groups.Default&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;ValidGroupCreate&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;extends&lt;/span&gt; Default &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;javax.validation.groups.Default&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;ValidGroupUpdate&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;extends&lt;/span&gt; Default &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里我继承了 &lt;code&gt;Default.class&lt;/code&gt; 默认分组，可以实现参数没有标明组的情况时，也可以使用组。可以减少一些代码量。&lt;/p&gt;
&lt;p&gt;实体类添加约束如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;ReportVO&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;implements&lt;/span&gt; Serializable &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#a2f&#34;&gt;@NotNull&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;private&lt;/span&gt; Integer cgeId&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#a2f&#34;&gt;@NotEmpty&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;groups &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; ValidGroupCreate&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;private&lt;/span&gt; String baseinfoSqrxm&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#a2f&#34;&gt;@NotEmpty&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;groups &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; ValidGroupUpdate&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;private&lt;/span&gt; String baseinfoSfzhm&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#a2f&#34;&gt;@NotEmpty&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;groups &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;ValidGroupCreate&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; ValidGroupUpdate&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;})&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;private&lt;/span&gt; String baseinfoHyzk&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;再然后 Controller 层指定组即可，不填的话则是默认分组，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#a2f&#34;&gt;@PostMapping&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;/test3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;test3&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;@Validated&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;ValidGroupUpdate&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; ReportVO vo&lt;span style=&#34;color:#666&#34;&gt;){&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;all&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; 200&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;success&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; JSON&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;toJSONString&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;vo&lt;span style=&#34;color:#666&#34;&gt;));&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;注解用法&#34;&gt;注解用法&lt;/h1&gt;
&lt;p&gt;在此列举一些常用的校验注解，方便查看。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;@NotNull&lt;/code&gt; 验证带注释的属性值不为 null。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@AssertTrue&lt;/code&gt; 验证带注释的属性值为 true。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@Size&lt;/code&gt; 验证带注释的属性值的大小在属性 min 和 max 之间；可以应用于 String， Collection， Map和数组属性。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@Min&lt;/code&gt; 验证带注释的属性的值不小于 value 属性。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@Max&lt;/code&gt; 验证带注释的属性的值不大于 value 属性。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@Email&lt;/code&gt; 验证带注释的属性是有效的电子邮件地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@NotEmpty&lt;/code&gt; 验证该属性不为 null 或为空；可以应用于 String， Collection， Map或Array值。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@NotBlank&lt;/code&gt; 只能应用于文本值，并验证该属性不是null还是空白。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@Positive&lt;/code&gt; 和 &lt;code&gt;@PositiveOrZero&lt;/code&gt; 适用于数值，并验证它们严格为正，或包括 0 在内为正。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@Negative&lt;/code&gt; 和 &lt;code&gt;@NegativeOrZero&lt;/code&gt; 适用于数值，并验证它们严格为负数，或为负数（包括0）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@Past&lt;/code&gt; 和 &lt;code&gt;@PastOrPresent&lt;/code&gt; 验证日期值是过去还是现在（包括现在）；可以应用于日期类型，包括 Java 8中添加的日期类型。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@Future&lt;/code&gt; 和 &lt;code&gt;@FutureOrPresent&lt;/code&gt; 验证日期值是将来的日期还是将来的日期（包括现在）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@Pattern&lt;/code&gt; 字段或属性的值必须与 regexp 元素中定义的正则表达式匹配。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2021-06-01-补充&#34;&gt;2021-06-01 补充&lt;/h1&gt;
&lt;p&gt;没有继承 extends ResponseEntityExceptionHandler 导致的一些问题；&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;spring&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;profiles&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# TODO:&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;#    active: jztx   # jzt&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;active&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;ykmysql &lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# yk&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;servlet&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;multipart&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;max-file-size&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;10MB&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.web.multipart.MaxUploadSizeExceededException&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.beans.factory.annotation.Value&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#a2f&#34;&gt;@Value&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;${spring.servlet.multipart.max-file-size}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;private&lt;/span&gt; String maxFileSize&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;    * 处理文件上传大小限制
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;    *
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;    * @param e
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;    * @return com.jztdata.pre_credit_granting.entity.S2VJSONResult&amp;lt;T&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;    * @Author zrr
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;    * @Date 2021/5/6 11:48
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;    * @throws
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;    */&lt;/span&gt;
&lt;span style=&#34;color:#a2f&#34;&gt;@ExceptionHandler&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;value &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; MaxUploadSizeExceededException&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;handlerMaxUploadSizeExceededException&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;MaxUploadSizeExceededException e&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
    logger&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;error&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;catch MaxUploadSizeExceededException {}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; e&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;getMessage&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;());&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; 400&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;文件大小超出限制（&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; maxFileSize &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;）&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.web.bind.MissingServletRequestParameterException&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;     * 处理 @RequestParam 参数验证失败（整个不传）
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;     * @param e
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;     * @param &amp;lt;T&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;     * @return
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;     */&lt;/span&gt;
    &lt;span style=&#34;color:#a2f&#34;&gt;@ExceptionHandler&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;value &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; MissingServletRequestParameterException&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;handlerMissingServletRequestParameterException&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;MissingServletRequestParameterException e&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt; S2VJSONResult&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; 400&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;参数验证未通过（&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; e&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;getMessage&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;）&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;后续&#34;&gt;后续&lt;/h1&gt;
&lt;p&gt;可以创建自定义约束，目前项目大多用到就是非空判断，暂时先不弄&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mossgreen.github.io/Validations-in-Spring/&#34;&gt;Validations in Spring&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://helloqb.xyz/post/2021/0201_validate.html - ©DRay. 本站遵循 CC-BY-NC 4.0 协议</description>
        </item>
    
    
    
        <item>
        <title>EXCEL 技巧之 - 小技巧</title>
        <link>https://helloqb.xyz/post/2020/1120_excel.html</link>
        <pubDate>Fri, 20 Nov 2020 00:00:00 +0000</pubDate>
        
        <guid>https://helloqb.xyz/post/2020/1120_excel.html</guid>
        <description>哲学家 https://helloqb.xyz/post/2020/1120_excel.html -&lt;h1 id=&#34;单元格间隔一行&#34;&gt;单元格间隔一行&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;编写左图，选中，往下拖动形成右图。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&#34;https://dsm01pap001files.storage.live.com/y4mQcD--Xpd6yp9ATDqFA3wYk7vgmJ5aAxuDt5gFyB6nHLx35Oop-5T2SgzDJ9TZXWcBoV9b02Wgwb_hNCQjpYApBgxoxE41ZstdRu9Jxri_RSw2g1fmW9n73de_dJECceLb8hvf-9gNDXJRcqgpziyXMrzJV_OysZha-x5rBBmMg0yPSjVYA4jYZSFc0Q3Z2jx?width=586&amp;height=198&amp;cropmode=none&#34; height=&#34;198&#34; /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;开始(菜单栏) -&amp;gt; 查找和选择 -&amp;gt; 定位条件：常量&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&#34;https://dsm01pap001files.storage.live.com/y4mjBQ-P2t8FjWrSum2PzNOamZzL8TVKRdYakRqUQ7aNXQLDCiJeRVINDFXadCxMA9Z3bLeMi8J_YUjeX2gFVV5xy-p6ry_Ios_CQVcd9qAcTZoGXHIgauUrKrUxQMXz22C-QbDsrckXU5fOYn9dWKyd2g06U7R25Pbai0sjqLL6sfcVFhHK-aAnva7cnnozko3?width=1138&amp;height=518&amp;cropmode=none&#34; height=&#34;300&#34; /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;开始(菜单栏) -&amp;gt; 插入 -&amp;gt; 插入工作表行&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&#34;https://dsm01pap001files.storage.live.com/y4mJ1X7x_SsXzqWx5p6k9V4GdzHRtK-cd6sOH8qHknBDVSDJi5aPJE3FXPJFGHNvOJjI6rdBVU6nqWGUbQrSDDxIDF83fACpIaXFZ1H4LkBpRhkAzBbmDw4c0dSJX6Due2lFJqBi_hTWnQoDzYZXUSggPVGMpzp_eg5AJKldX4bHMZ1SHRpyWsHiG7Vb3chf4Vm?width=853&amp;height=474&amp;cropmode=none&#34; height=&#34;300&#34; /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;得到最终结果，如下。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&#34;https://dsm01pap001files.storage.live.com/y4m32fCfUg4gXnrSdTomATNeVRfvwmdcnYlC54nFZisJQNWLIn25bJCuEwoS8Eid5UMVHFJ1uFjcG0w0e_PJrautNkuRAYwNjPyvdhGff6KWtPvcrWfTKLmZuSIvqP-umNav8xS6MwyUsN13Zw2_bC0XNmhLwYv7cjVN5wT7gIwCD4swL9oPB2t4vNUqdIpu3Wh?width=407&amp;height=344&amp;cropmode=none&#34; height=&#34;300&#34; /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;h1 id=&#34;待&#34;&gt;待&lt;/h1&gt;
- https://helloqb.xyz/post/2020/1120_excel.html - ©DRay. 本站遵循 CC-BY-NC 4.0 协议</description>
        </item>
    
    
    
        <item>
        <title>frp 实现无公网 IP 使用 Windows 远程桌面</title>
        <link>https://helloqb.xyz/post/2020/1102_frp.html</link>
        <pubDate>Mon, 02 Nov 2020 00:00:00 +0000</pubDate>
        
        <guid>https://helloqb.xyz/post/2020/1102_frp.html</guid>
        <description>哲学家 https://helloqb.xyz/post/2020/1102_frp.html -&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;
&lt;p&gt;远程控制软件有用过 &lt;code&gt;TeamViewer&lt;/code&gt;、&lt;code&gt;向日葵&lt;/code&gt;、&lt;code&gt;Chrome Remote Desktop&lt;/code&gt; 等，&lt;code&gt;TeamViewer&lt;/code&gt; 的稳定性流畅性最好，但是后台挂久了，会被检测商业用途，需要付费，那价格实在没法交个朋友。&lt;code&gt;向日葵&lt;/code&gt; 挺好的，但是对国产软件向来有些警惕，不敢给予太高的权限。&lt;code&gt;Chrome Remote Desktop&lt;/code&gt; 国内没法使用无人值守访问。Windows 自带的远程桌面不能连接非局域网内的用户，公网 IP 对于租客来说也没法弄，后来了解了内网穿透技术，正好解决了问题。&lt;/p&gt;
&lt;h1 id=&#34;简单使用&#34;&gt;简单使用&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;frp 是一个专注于内网穿透的高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等多种协议。可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;frp 实现需要具有公网 IP 节点的中转站，我用的是谷歌云，公司也用了内网穿透技术，用的是腾讯云，比较后发现公司速度更快。&lt;/p&gt;
&lt;h2 id=&#34;server-端安装&#34;&gt;Server 端安装&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/fatedier/frp/releases&#34;&gt;官网&lt;/a&gt; 下载对应系统的版本，我的 VPS 是 linux x64，所以选用的是版本是 &lt;code&gt;frp_0.34.1_linux_amd64.tar.gz&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;下载后解压文件夹，将 &lt;code&gt;frps.ini&lt;/code&gt; 和 &lt;code&gt;frps&lt;/code&gt; 文件拷贝到服务器上，运行即可。示例如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# 后台运行，输出默认重定向到当前目录下 nohup.out 文件&lt;/span&gt;
nohup /root/frp/frps -c /root/frp/frps.ini &amp;amp;
&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# 后台运行，不记录输出信息 &lt;/span&gt;
nohup /root/frp/frps -c /root/frp/frps.ini &amp;amp;&amp;gt; /dev/null &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其中 &lt;code&gt;frps.ini&lt;/code&gt; 文件中 &lt;code&gt;bind_port = 7000&lt;/code&gt; 表示默认监听端口为 7000，需要安全组策略允许入站和出站。&lt;/p&gt;
&lt;h2 id=&#34;client-端安装&#34;&gt;Client 端安装&lt;/h2&gt;
&lt;p&gt;下载 Windows 端的版本 &lt;code&gt;frp_0.34.1_windows_amd64.zip&lt;/code&gt;，也只需要两个文件 &lt;code&gt;frpc.ini&lt;/code&gt; 和 &lt;code&gt;frpc.exe&lt;/code&gt;。运行示例如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ps1&#34; data-lang=&#34;ps1&#34;&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# 文件所在目录下&lt;/span&gt;
frpc.exe -c frpc.ini
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;frps.ini&lt;/code&gt; 文件的示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;[common]&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;server_addr&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;35.***.**.216&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;server_port&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;7000&lt;/span&gt;

&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;[RDP1]&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;tcp&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;local_ip&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;127.0.0.1&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;local_port&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;3389&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;remote_port&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;7002&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;server_addr&lt;/code&gt;：server 端公网 IP&lt;/li&gt;
&lt;li&gt;&lt;code&gt;server_port&lt;/code&gt;：server 端监听端口，同 &lt;code&gt;bind_port&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type&lt;/code&gt;：tcp，默认模式，不够安全&lt;/li&gt;
&lt;li&gt;&lt;code&gt;local_ip&lt;/code&gt;：本机使用，填 &lt;code&gt;127.0.0.1&lt;/code&gt; 即可&lt;/li&gt;
&lt;li&gt;&lt;code&gt;local_port&lt;/code&gt;：windows 远程桌面默认端口为 3389，可以在设置中看到&lt;/li&gt;
&lt;li&gt;&lt;code&gt;remote_port&lt;/code&gt;：远程用来映射的端口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此时若两端日志都显示 &lt;code&gt;start proxy success&lt;/code&gt; 说明连接成功。远程桌面连接时计算机名称输入 &lt;code&gt;[server_port]:[remote_port]&lt;/code&gt; 即可实现远程控制。&lt;/p&gt;
&lt;h1 id=&#34;windows-开机无窗口启动&#34;&gt;Windows 开机无窗口启动&lt;/h1&gt;
&lt;p&gt;由于客户端要运行命令行，Windows 需要每次打开 shell 客户端，这里分享两个小技巧实现开机无窗口启动命令。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;脚本无窗口运行&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;新建 &lt;code&gt;.vbs&lt;/code&gt; 运行文件，输入以下命令，&lt;code&gt;CreateObject(&amp;quot;WScript.Shell&amp;quot;).Run &amp;quot;***&amp;quot;,0&lt;/code&gt; 将 &lt;code&gt;***&lt;/code&gt; 替换成需要的命令。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;应用开机启动&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;创建该文件的快捷方式到 &lt;code&gt;用户\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup&lt;/code&gt; 目录下，即可实现开机自动运行。&lt;/p&gt;
&lt;p&gt;后台启动后，想要查看进程的话，&lt;code&gt;Windows PowerShell&lt;/code&gt; 查看进程和删除进程的命令如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ps1&#34; data-lang=&#34;ps1&#34;&gt;&lt;span style=&#34;color:#008000&#34;&gt;Get-Process&lt;/span&gt; -name frp*
&lt;span style=&#34;color:#008000&#34;&gt;Stop-Process&lt;/span&gt; -name frpc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;frp-进阶&#34;&gt;frp 进阶&lt;/h1&gt;
&lt;h2 id=&#34;stcp-模式安全&#34;&gt;stcp 模式（安全）&lt;/h2&gt;
&lt;p&gt;tcp 暴露的端口，任何设备都可以访问，有较大的安全隐患。为此 frp 提供了 stcp 模式。&lt;/p&gt;
&lt;p&gt;被访问端配置示例如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;[common]&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;server_addr&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;35.***.**.216&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;server_port&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;7000&lt;/span&gt;

&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;[RDP2]&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;stcp&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;sk&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;abcdefg&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;local_ip&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;127.0.0.1&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;local_port&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;3389&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;访问端配置示例如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;[common]&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;server_addr&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;35.***.**.216&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;server_port&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;7000&lt;/span&gt;

&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;[RDP2_visitor]&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;stcp&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;role&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;visitor&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;server_name&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;RDP2&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;sk&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;abcdefg&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;bind_addr&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;127.0.0.1&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;bind_port&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;6000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此时访问端使用 &lt;code&gt;127.0.0.1:6000&lt;/code&gt; 即可远程连接。&lt;/p&gt;
&lt;p&gt;此方式两边客户端都要配置，不如 tcp 方便些。&lt;/p&gt;
&lt;h2 id=&#34;xtcp-模式高效&#34;&gt;xtcp 模式（高效）&lt;/h2&gt;
&lt;p&gt;xtcp 模式是点对点模式，实现不通过服务器中转流量的方式来访问内网服务。使用方式同 stcp 类似，需要在两边都部署上 frpc 用于建立直接的连接。&lt;/p&gt;
&lt;p&gt;服务端需要额外配置监听一个 UDP 端口。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;[common]&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;bind_port&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;7000&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;bind_udp_port&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;7001&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;被访问端配置示例如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;[common]&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;server_addr&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;35.***.**.216&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;server_port&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;7000&lt;/span&gt;

&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;[RDP2]&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;xtcp&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;sk&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;abcdefg&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;local_ip&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;127.0.0.1&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;local_port&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;3389&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;访问端配置示例如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;[common]&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;server_addr&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;35.***.**.216&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;server_port&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;7000&lt;/span&gt;

&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;[RDP2_visitor]&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;xtcp&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;role&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;visitor&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;server_name&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;RDP2&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;sk&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;abcdefg&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;bind_addr&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;127.0.0.1&lt;/span&gt;
&lt;span style=&#34;color:#7d9029&#34;&gt;bind_port&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;6000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此方式穿透成功率较低，我测试了下，竟然可用，速度明显快很多，所以我最终采用的是此方法。&lt;/p&gt;
&lt;h1 id=&#34;后续&#34;&gt;后续&lt;/h1&gt;
&lt;p&gt;上文提到公司也使用了内网穿透技术，采用 &lt;code&gt;frp + openVPN&lt;/code&gt; 的方法，给每个人分配了一个密钥，员工打开 openVPN，加载密钥，就可以实现在家访问公司内部搭建的网站，当然远程控制也可以。感觉比直连的方式稳定些，后续可以研究下。&lt;/p&gt;
- https://helloqb.xyz/post/2020/1102_frp.html - ©DRay. 本站遵循 CC-BY-NC 4.0 协议</description>
        </item>
    
    
    
        <item>
        <title>Fastjson 使用</title>
        <link>https://helloqb.xyz/post/2020/1028_fastjson.html</link>
        <pubDate>Wed, 28 Oct 2020 00:00:00 +0000</pubDate>
        
        <guid>https://helloqb.xyz/post/2020/1028_fastjson.html</guid>
        <description>哲学家 https://helloqb.xyz/post/2020/1028_fastjson.html -&lt;h1 id=&#34;jsonobject-互转&#34;&gt;JSONObject 互转&lt;/h1&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&#34;https://dsm01pap001files.storage.live.com/y4mdBx8XpmSPr91JS2LVgwIIFuBU5Cd5o8n_GT_dDs2Sim12WVx34JixADFfQbrikACIfDV1iAjTOlsTGamSvM80ztlp0f59TMtE-pQOKQP5SyfueVHVEqEEO8Z9bv3AnUUjYzS2jRfu6iu-qczIu1keRGv4om0zPKnTwl4SA7L3ZBpxBHyJlPZpbHMFNZBCwPV?width=1236&amp;height=854&amp;cropmode=none&#34; height=&#34;500&#34; /&gt;&lt;/center&gt;&lt;p&gt;
&lt;h2 id=&#34;string-to-jsonobject&#34;&gt;String to JSONObject&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;JSONObject j &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; JSON&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;parseObject&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;str&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;jsonobject-to-string&#34;&gt;JSONObject to String&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;String str &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; j&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;toJSONString&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;转成字符串时默认会将 &lt;code&gt;null&lt;/code&gt; 值去掉，若想要保留，需要添加 &lt;code&gt;SerializerFeature.WriteMapNullValue&lt;/code&gt; 参数。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;String str &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; j&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;SerializerFeature&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;WriteMapNullValue&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;string-to-javabean&#34;&gt;String to JavaBean&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;T t &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; JSON&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;parseObject&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;str&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; T&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;javabean-to-string&#34;&gt;JavaBean to String&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;String str &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; JSON&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;toJSONString&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;t&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;同样，若想要保留 &lt;code&gt;null&lt;/code&gt; 值，需要添加 &lt;code&gt;SerializerFeature.WriteMapNullValue&lt;/code&gt; 参数。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;String str &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; JSON&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;toJSONString&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;t&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; erializerFeature&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;WriteMapNullValue&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;jsonobject-to-javabean&#34;&gt;JSONObject to JavaBean&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;T t &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; j&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;toJavaObject&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;javabean-to-jsonobject&#34;&gt;JavaBean to JSONObject&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;JSONObject j &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;JSONObject&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; JSON&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;toJSON&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;t&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;jsonarray-互转&#34;&gt;JSONArray 互转&lt;/h1&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&#34;https://dsm01pap001files.storage.live.com/y4m9fI67f8yfjAvDW7NNRqIlV399ZX24B4awFth3u6qKYnsQ9Pl2QIfO0uNstmitpiQ48-Q3AA0nTLVTqR4H1qc5gUSKOjaR1ILkFhIQJJ3iBBAponsaSMulh3qZakNejdmEBzfa5PvpG-GpXBgt5r3oCGDRwbhoCVqqg9NQtEksZGiUlPHlrgDC5oP_9M-XVtK?width=1196&amp;height=847&amp;cropmode=none&#34; height=&#34;500&#34; /&gt;&lt;/center&gt;&lt;p&gt;
&lt;h2 id=&#34;string-to-jsonarray&#34;&gt;String to JSONArray&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;JSONArray j &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; JSON&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;parseArray&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;str&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;jsonarray-to-string&#34;&gt;JSONArray to String&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;String str &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; j&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;toJSONString&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;同样，若想要保留 &lt;code&gt;null&lt;/code&gt; 值，需要添加 &lt;code&gt;SerializerFeature.WriteMapNullValue&lt;/code&gt; 参数。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;String str &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; j&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;SerializerFeature&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;WriteMapNullValue&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;string-to-javalist&#34;&gt;String to JavaList&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;List&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; list &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; JSON&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;parseArray&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;str&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; T&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;javalist-to-string&#34;&gt;JavaList to String&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;String str &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; JSON&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;toJSONString&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;list&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;同样，若想要保留 &lt;code&gt;null&lt;/code&gt; 值，需要添加 &lt;code&gt;SerializerFeature.WriteMapNullValue&lt;/code&gt; 参数。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;String str &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; JSON&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;toJSONString&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;list&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; erializerFeature&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;WriteMapNullValue&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;jsonarray-to-javalist&#34;&gt;JSONArray to JavaList&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;List&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; list &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; j&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;toJavaList&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;T&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;javalist-to-jsonarray&#34;&gt;JavaList to JSONArray&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;JSONArray j &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;JSONArray&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; JSON&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;toJSON&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;list&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;- https://helloqb.xyz/post/2020/1028_fastjson.html - ©DRay. 本站遵循 CC-BY-NC 4.0 协议</description>
        </item>
    
    
    
        <item>
        <title>YAML 配置与调用</title>
        <link>https://helloqb.xyz/post/2020/0907_yaml.html</link>
        <pubDate>Mon, 07 Sep 2020 00:00:00 +0000</pubDate>
        
        <guid>https://helloqb.xyz/post/2020/0907_yaml.html</guid>
        <description>哲学家 https://helloqb.xyz/post/2020/0907_yaml.html -&lt;h1 id=&#34;调用&#34;&gt;调用&lt;/h1&gt;
&lt;h2 id=&#34;value-注解调用&#34;&gt;Value 注解调用&lt;/h2&gt;
&lt;p&gt;例如，YAML 文件中有个自定义配置。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;myconfig&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;model-server-url&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;127.0.0.1&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用 &lt;code&gt;@Value&lt;/code&gt; 注解调用。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.beans.factory.annotation.Value&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#a2f&#34;&gt;@Value&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;${myconfig.model-server-url}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;private&lt;/span&gt; String modelServerUrl&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;变量少的情况，代码相对简单，但当变量被多次调用的情况下，可以考虑用类包装一下，下面的就是采用这种逻辑。&lt;/p&gt;
&lt;h2 id=&#34;configurationproperties-注解调用&#34;&gt;ConfigurationProperties 注解调用&lt;/h2&gt;
&lt;p&gt;当参数较多时，可以使用 &lt;code&gt;@ConfigurationProperties&lt;/code&gt; 将其绑定到一个类中。例如&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;myconfig&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;model-server-url&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;127.0.0.1&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;servers&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; 
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;- www.abc.test.com&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;- www.xyz.test.com&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;配置类代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.boot.context.properties.ConfigurationProperties&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.boot.context.properties.EnableConfigurationProperties&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.context.annotation.Configuration&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt; * yaml config
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt; *
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt; */&lt;/span&gt;
&lt;span style=&#34;color:#a2f&#34;&gt;@Configuration&lt;/span&gt;
&lt;span style=&#34;color:#a2f&#34;&gt;@EnableConfigurationProperties&lt;/span&gt;
&lt;span style=&#34;color:#a2f&#34;&gt;@ConfigurationProperties&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;prefix &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;myconfig&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;YAMLConfig&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;private&lt;/span&gt; String modelServerUrl&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;private&lt;/span&gt; List&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; servers &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;new&lt;/span&gt; ArrayList&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;

    &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;// standard getters and setters
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其中 &lt;code&gt;@Configuration&lt;/code&gt; 和 &lt;code&gt;@EnableConfigurationProperties&lt;/code&gt; 可以用 &lt;code&gt;@Component&lt;/code&gt; 代替，前面那种注解更精确些。&lt;/p&gt;
&lt;p&gt;YAML 文件中参数匹配很宽松，下划线 &lt;code&gt;_&lt;/code&gt; 和 &lt;code&gt;-&lt;/code&gt; 和驼峰都能够匹配到，官方建议使用 &lt;code&gt;-&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;调用时直接通过 &lt;code&gt;@Autowired&lt;/code&gt; 注入即可，例如&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#a2f&#34;&gt;@Autowired&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;private&lt;/span&gt; YAMLConfig yamlConfig&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#a2f&#34;&gt;@GetMapping&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;/hello&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#a2f&#34;&gt;@ResponseBody&lt;/span&gt;
String &lt;span style=&#34;color:#00f&#34;&gt;hello&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(){&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;hello and url: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; yamlConfig&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;getModelServerUrl&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34; and servers: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; yamlConfig&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;getServers&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;多环境使用&#34;&gt;多环境使用&lt;/h1&gt;
&lt;p&gt;通常线上环境和测试环境的配置会有不同，有时候搞混的话，部署到线上才发觉，这时又得重新打包了。若是配置写在 YAML 文件中，可以使用命令行参数进行配置更改。&lt;/p&gt;
&lt;h2 id=&#34;命令行直接配置&#34;&gt;命令行直接配置&lt;/h2&gt;
&lt;p&gt;如上述例中参数想要替换成 127.0.0.2，启动命令如下；&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;java -jar demo.jar --myconfig.model-server-url&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;127.0.0.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到有很多地方可以配置，那么这些肯定会有个优先级，这种命令行的形式应该是最高的，目前没有深入了解。&lt;/p&gt;
&lt;h2 id=&#34;单文件多配置&#34;&gt;单文件多配置&lt;/h2&gt;
&lt;p&gt;上述命令行直接配置的方式肯定不适用于参数多的情况，这时就需要用到了 &lt;code&gt;profile&lt;/code&gt; 参数，例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;spring&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;profiles&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;active&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;test&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;spring&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;profiles&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;test&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;myconfig&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;model-server-url&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;127.0.0.1&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;server-name&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;test&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;spring&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;profiles&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;prod&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;myconfig&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;model-server-url&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;127.0.0.2&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;server-name&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;prod&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里 &lt;code&gt;---&lt;/code&gt; 表示新文档的开始，所以其实是三个环境写到一起。一开始的默认配置是选择 test，如果想要换成 prod，则启动命令更改如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;java -jar demo.jar --spring.profiles.active&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;prod
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;多文件多配置&#34;&gt;多文件多配置&lt;/h2&gt;
&lt;p&gt;当配置越来越多时，还是分开不同文件更好些，Spring Boot 秉承着 &lt;strong&gt;约定优于配置&lt;/strong&gt; 的理念，如果按照其规范来，会相当便利。&lt;/p&gt;
&lt;p&gt;如上述例子可以分为文件 &lt;code&gt;application.yml&lt;/code&gt;、文件 &lt;code&gt;application-test.yml&lt;/code&gt; 和文件 &lt;code&gt;application-prod.yml&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;application.yml&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;spring&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;profiles&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;active&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;test&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;application-test.yml&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;myconfig&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;model-server-url&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;127.0.0.1&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;server-name&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;test&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;application-prod.yml&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;myconfig&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;model-server-url&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;127.0.0.2&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;server-name&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;prod&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;尾巴&#34;&gt;尾巴&lt;/h1&gt;
&lt;p&gt;个人觉得 YAML 配置不同环境挺适合的，如果是静态常量，感觉还是静态类写死更方便些。&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.baeldung.com/spring-yaml&#34;&gt;Spring YAML Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.hangge.com/blog/cache/detail_2459.html&#34;&gt;SpringBoot - 配置文件application.yml使用详解&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://helloqb.xyz/post/2020/0907_yaml.html - ©DRay. 本站遵循 CC-BY-NC 4.0 协议</description>
        </item>
    
    
    
        <item>
        <title>MapStruct 实现 Java Bean 映射</title>
        <link>https://helloqb.xyz/post/2020/0821_mapstruct.html</link>
        <pubDate>Fri, 21 Aug 2020 00:00:00 +0000</pubDate>
        
        <guid>https://helloqb.xyz/post/2020/0821_mapstruct.html</guid>
        <description>哲学家 https://helloqb.xyz/post/2020/0821_mapstruct.html -&lt;h1 id=&#34;介绍&#34;&gt;介绍&lt;/h1&gt;
&lt;p&gt;项目中遇到数据库返回的字段不想全部返回给前端，一个一个 setter 挺麻烦，不够优雅。市面上有挺多映射框架如 &lt;code&gt;Dozer&lt;/code&gt;，&lt;code&gt;Orika&lt;/code&gt;，&lt;code&gt;MapStruct&lt;/code&gt;，&lt;code&gt;ModelMapper&lt;/code&gt;，&lt;code&gt;JMapper&lt;/code&gt; 等，其中 &lt;code&gt;MapStruct&lt;/code&gt; 只是代码生成器，使用纯 Java 的方法调用源对象和目标对象之间进行映射，并非 Java 反射机制，所以其性能最好。&lt;/p&gt;
&lt;h1 id=&#34;实现&#34;&gt;实现&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Maven 依赖&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;...
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;org.mapstruct.version&amp;gt;&lt;/span&gt;1.3.1.Final&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/org.mapstruct.version&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;
...
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.mapstruct&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;mapstruct&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${org.mapstruct.version}&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
...
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-compiler-plugin&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.8.1&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;source&amp;gt;&lt;/span&gt;1.8&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/source&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;target&amp;gt;&lt;/span&gt;1.8&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/target&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;annotationProcessorPaths&amp;gt;&lt;/span&gt;
                    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;path&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.mapstruct&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;mapstruct-processor&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${org.mapstruct.version}&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
                    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/annotationProcessorPaths&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果项目中有用到 &lt;code&gt;lombok&lt;/code&gt; 的话，&lt;code&gt;MapStruct&lt;/code&gt; 也支持，添加如下即可。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;annotationProcessorPaths&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;path&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.projectlombok&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;lombok&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${lombok.version}&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/annotationProcessorPaths&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;普通调用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MapStruct&lt;/code&gt; 定义非常简单，因为它完全基于代码生成。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.mapstruct.Mapper&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.mapstruct.Mapping&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#a2f&#34;&gt;@Mapper&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;MapStructConverter&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
    MapStructConverter MAPPER &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mappers&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;getMapper&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;MapStructConverter&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
 
    &lt;span style=&#34;color:#a2f&#34;&gt;@Mapping&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;source &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; target &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;orderStatus&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#a2f&#34;&gt;@Override&lt;/span&gt;
    Order &lt;span style=&#34;color:#00f&#34;&gt;convert&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;SourceOrder sourceOrder&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
 
    &lt;span style=&#34;color:#a2f&#34;&gt;@Override&lt;/span&gt;
    DestinationCode &lt;span style=&#34;color:#00f&#34;&gt;convert&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;SourceCode sourceCode&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;调用也很简单。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;DestinationCode destinationCode &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; MapStructConverter&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;MAPPER&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;convert&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;sourceCode&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Spring 注解调用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Spring 项目的话可以如下参数实现依赖注入。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#a2f&#34;&gt;@Mapper&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;componentModel &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;spring&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;MapStructConverter&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;@Autowired&lt;/code&gt; 注入调用更方便。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#a2f&#34;&gt;@Autowired&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;private&lt;/span&gt; MapStructConverter mapStructConverter&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

DestinationCode destinationCode &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; mapStructConverter&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;convert&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;sourceCode&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;尾巴&#34;&gt;尾巴&lt;/h1&gt;
&lt;p&gt;其实这个问题困扰我很久了，之前一直想着用多态方式实现，没找到解决方法后也就用一个一个 setter 方式实现，现在想来很懒，以后还是多思考，多找找轮子，尽可能少写垃圾代码。&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.baeldung.com/java-performance-mapping-frameworks&#34;&gt;Performance of Java Mapping&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mapstruct.org/documentation/stable/reference/html/&#34;&gt;MapStruct 1.3.1.Final Reference Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mapstruct/mapstruct&#34;&gt;mapstruct github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://helloqb.xyz/post/2020/0821_mapstruct.html - ©DRay. 本站遵循 CC-BY-NC 4.0 协议</description>
        </item>
    
    
    
        <item>
        <title>Selenium 模拟浏览器另存为</title>
        <link>https://helloqb.xyz/post/2020/0805_selenium.html</link>
        <pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate>
        
        <guid>https://helloqb.xyz/post/2020/0805_selenium.html</guid>
        <description>哲学家 https://helloqb.xyz/post/2020/0805_selenium.html -&lt;h1 id=&#34;缘由&#34;&gt;缘由&lt;/h1&gt;
&lt;p&gt;开发一个下载图片的爬虫，原网站时不时变动，导致爬虫经常会挂掉，尤其在最终下载图片的环节。想着模拟浏览器另存为的方式可能会更健壮些，不那么容易挂。另外也一直想学习下 Selenium。&lt;/p&gt;
&lt;h1 id=&#34;selenium&#34;&gt;Selenium&lt;/h1&gt;
&lt;h2 id=&#34;1-驱动和环境&#34;&gt;1. 驱动和环境&lt;/h2&gt;
&lt;p&gt;使用的是 Python 环境，Selenium 的安装直接 &lt;code&gt;pip install selenium&lt;/code&gt; 即可。&lt;/p&gt;
&lt;p&gt;浏览器使用的是 Firefox，驱动是 &lt;a href=&#34;https://github.com/mozilla/geckodriver&#34;&gt;geckdriver&lt;/a&gt;。将下载后的文件放入到 Firefox 安装目录下，如 &lt;code&gt;C:\Program Files\Mozilla Firefox&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;环境变量的配置也是 Firefox 安装目录，而不需要到文件&lt;/strong&gt;&lt;/em&gt;。这里坑了好久，一直报找不到驱动的错误，原因是写成了 &lt;code&gt;C:\Program Files\Mozilla Firefox\geckdriver.exe&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;2-请求网站&#34;&gt;2. 请求网站&lt;/h2&gt;
&lt;p&gt;以掘金网站博客 &lt;a href=&#34;https://juejin.im/post/6857394127064006663&#34;&gt;cxuan读者的外包面试之旅&lt;/a&gt; 为例。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;driver &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; webdriver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Firefox()
driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;https://juejin.im/post/6857394127064006663&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此时没有问题的话，浏览器会自动打开网站。&lt;/p&gt;
&lt;h2 id=&#34;3-滚动加载&#34;&gt;3. 滚动加载&lt;/h2&gt;
&lt;p&gt;此时若直接获取图片，只会获取获取到一两张。因为大多数网站采用 Ajax 方式，页面滚动到图片才加载，所有就需要模拟页面滚动了。&lt;code&gt;execute_script&lt;/code&gt; 方法调用 js 可实现滚动操作。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# 获取内容高度&lt;/span&gt;
all_height &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;execute_script(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;return document.body.scrollHeight&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# 循环往下滚动，每次滚1024高，间隔1秒&lt;/span&gt;
scroll_height &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1024&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#008000&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#008000&#34;&gt;int&lt;/span&gt;(all_height&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;scroll_height)):
    driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;execute_script(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;window.scrollTo(0, {0});&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;format(i&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;scroll_height))
    time&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果遇到无限加载的页面，可以参考 stackoverflow 的 &lt;a href=&#34;https://stackoverflow.com/questions/20986631/how-can-i-scroll-a-web-page-using-selenium-webdriver-in-python&#34;&gt;回答&lt;/a&gt;。代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;SCROLL_PAUSE_TIME &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0.5&lt;/span&gt;

&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# Get scroll height&lt;/span&gt;
last_height &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;execute_script(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;return document.body.scrollHeight&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;while&lt;/span&gt; True:
    &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# Scroll down to bottom&lt;/span&gt;
    driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;execute_script(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;window.scrollTo(0, document.body.scrollHeight);&amp;#34;&lt;/span&gt;)

    &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# Wait to load page&lt;/span&gt;
    time&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sleep(SCROLL_PAUSE_TIME)

    &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# Calculate new scroll height and compare with last scroll height&lt;/span&gt;
    new_height &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;execute_script(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;return document.body.scrollHeight&amp;#34;&lt;/span&gt;)
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; new_height &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; last_height:
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;break&lt;/span&gt;
    last_height &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; new_height
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;4-查找元素&#34;&gt;4. 查找元素&lt;/h2&gt;
&lt;p&gt;图片加载完成后，就可以定位元素找到图片地址了。这里知识和之前学 Scrapy 的差不多。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# 定位到文章节点&lt;/span&gt;
image_content &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;find_element_by_css_selector(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;.article&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# 获取文章内img标签&lt;/span&gt;
image_elems &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; image_content&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;find_elements_by_css_selector(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;img&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# 图片链接存放到list中&lt;/span&gt;
image_list &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; image_elems:
    &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# print(i.get_attribute(&amp;#34;src&amp;#34;))&lt;/span&gt;
    image_list&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;append(i&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;get_attribute(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;src&amp;#34;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;5-调用右键&#34;&gt;5. 调用右键&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ActionChains&lt;/code&gt; 方法可调用右键。右键之前需先定位到元素。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;driver &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; webdriver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Firefox()
driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;https://img-blog.csdnimg.cn/20191104151241389.png&amp;#34;&lt;/span&gt;)
actionChains &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; ActionChains(driver)

body &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;find_element_by_css_selector(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;body &amp;gt; img&amp;#34;&lt;/span&gt;)
actionChains&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;context_click(body)&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;perform()

time&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#666&#34;&gt;3&lt;/span&gt;)
driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;close()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后就没有然后了。&lt;/p&gt;
&lt;p&gt;Selenium 好像对页面而无法右键菜单进行操作，网上也搜了好久，应该得联合 js 操作，感觉挺麻烦的。后来找到了 &lt;code&gt;PyAutoGUI&lt;/code&gt; 这个库。&lt;/p&gt;
&lt;h1 id=&#34;pyautogui&#34;&gt;PyAutoGUI&lt;/h1&gt;
&lt;p&gt;安装直接 &lt;code&gt;pip install pyautogui&lt;/code&gt; 即可。&lt;/p&gt;
&lt;p&gt;使用超级简单：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;write()&lt;/code&gt; 写入字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;press()&lt;/code&gt; 按下按键，相当于 &lt;code&gt;keyDown()&lt;/code&gt; 和 &lt;code&gt;keyUp()&lt;/code&gt; 的包装&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hotkey()&lt;/code&gt; 可以传递几个键字符串，这些字符串将按顺序按下，然后以相反的顺序释放&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如火狐的另存为在第三个位置，只需要按方向键下三次，然后回车即可跳出保存对话框。代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;pyautogui&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;press([&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;down&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;down&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;down&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;enter&amp;#39;&lt;/span&gt;])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;由于是图片地址，本 DEMO 其实只需要键入 &lt;code&gt;Ctrl + s&lt;/code&gt; 就可以跳出保存对话框。代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# 浏览器另存为保存图片&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; image_list:
    driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;get(i)

    &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# 图片地址，直接 ctrl+s，不用另存为&lt;/span&gt;
    pyautogui&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;hotkey(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;ctrl&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;s&amp;#39;&lt;/span&gt;)
    pyautogui&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;)
    &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# 采用时间戳命名，防止名称重复弹出确认框&lt;/span&gt;
    pyautogui&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#008000&#34;&gt;str&lt;/span&gt;(&lt;span style=&#34;color:#008000&#34;&gt;int&lt;/span&gt;(time&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;time() &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1000&lt;/span&gt;)), interval&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0.1&lt;/span&gt;)
    pyautogui&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;press(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;enter&amp;#39;&lt;/span&gt;)

    pyautogui&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;整体代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;selenium&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; webdriver
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;selenium.webdriver.common.keys&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; Keys
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;selenium.webdriver&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; ActionChains
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;pyautogui&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;time&lt;/span&gt;


&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;driver_JJ&lt;/span&gt;():
    &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# 请求网站&lt;/span&gt;
    driver &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; webdriver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Firefox()
    driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;https://juejin.im/post/6857394127064006663&amp;#34;&lt;/span&gt;)

    &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# 获取内容高度&lt;/span&gt;
    all_height &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;execute_script(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;return document.body.scrollHeight&amp;#34;&lt;/span&gt;)
    &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# 循环往下滚动，每次滚1024高，间隔1秒&lt;/span&gt;
    scroll_height &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1024&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#008000&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#008000&#34;&gt;int&lt;/span&gt;(all_height&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;scroll_height)):
        driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;execute_script(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;window.scrollTo(0, {0});&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;format(i&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;scroll_height))
        time&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;)

    &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# 定位到文章节点&lt;/span&gt;
    image_content &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;find_element_by_css_selector(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;.article&amp;#34;&lt;/span&gt;)
    &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# 获取文章内img标签&lt;/span&gt;
    image_elems &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; image_content&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;find_elements_by_css_selector(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;img&amp;#34;&lt;/span&gt;)
    &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# 图片链接存放到list中&lt;/span&gt;
    image_list &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; []
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; image_elems:
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;print&lt;/span&gt;(i&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;get_attribute(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;src&amp;#34;&lt;/span&gt;))
        image_list&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;append(i&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;get_attribute(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;src&amp;#34;&lt;/span&gt;))

    &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# 浏览器另存为保存图片&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; image_list:
        driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;get(i)

        &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# 图片地址，直接 ctrl+s，不用另存为&lt;/span&gt;
        pyautogui&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;hotkey(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;ctrl&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;s&amp;#39;&lt;/span&gt;)
        pyautogui&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;)
        &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# 采用时间戳命名，防止名称重复弹出确认框&lt;/span&gt;
        pyautogui&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#008000&#34;&gt;str&lt;/span&gt;(&lt;span style=&#34;color:#008000&#34;&gt;int&lt;/span&gt;(time&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;time() &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1000&lt;/span&gt;)), interval&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0.1&lt;/span&gt;)
        pyautogui&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;press(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;enter&amp;#39;&lt;/span&gt;)

        pyautogui&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;)

    driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;close()


&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;main&lt;/span&gt;():
    driver_JJ()


&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:
    main()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;关联阅读&#34;&gt;关联阅读&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://pyautogui.readthedocs.io/en/latest/keyboard.html&#34;&gt;PyAutoGUI文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://selenium-python-zh.readthedocs.io/en/latest/index.html#&#34;&gt;Selenium with Python中文翻译文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://helloqb.xyz/post/2020/0805_selenium.html - ©DRay. 本站遵循 CC-BY-NC 4.0 协议</description>
        </item>
    
    
    
        <item>
        <title>进一步了解 RabbitMQ 跨语言通讯</title>
        <link>https://helloqb.xyz/post/2020/0728_rabbitmq.html</link>
        <pubDate>Tue, 28 Jul 2020 00:00:00 +0000</pubDate>
        
        <guid>https://helloqb.xyz/post/2020/0728_rabbitmq.html</guid>
        <description>哲学家 https://helloqb.xyz/post/2020/0728_rabbitmq.html -&lt;h1 id=&#34;进一步了解&#34;&gt;进一步了解&lt;/h1&gt;
&lt;p&gt;开发中遇到了 RabbitMQ 丢失的情况，另外一端一直说是我的 Java 端的问题，无奈做了验证，本文的主要内容也就是这个：如何验证消息发送成功。&lt;/p&gt;
&lt;h1 id=&#34;配置&#34;&gt;配置&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;pom.xml&lt;/code&gt; 文件中添加依赖。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter-amqp&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;application.yml&lt;/code&gt; 文件中添加配置开启确认。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;spring&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;rabbitmq&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;host&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;192.168.0.102&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;port&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;5672&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;username&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;admin&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;password&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;admin&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;virtual-host&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;sl&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;publisher-confirm-type&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;correlated&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;publisher-returns&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;template&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;mandatory&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;重写方法&#34;&gt;重写方法&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;RabbitTemplate.ConfirmCallback&lt;/code&gt; 确认消息是否到达交换机， &lt;code&gt;RabbitTemplate.ReturnCallback&lt;/code&gt; 确认消息是否到达队列中。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.slf4j.Logger&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.slf4j.LoggerFactory&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.amqp.core.Message&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.amqp.rabbit.connection.CorrelationData&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.amqp.rabbit.core.RabbitTemplate&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.beans.factory.annotation.Autowired&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.stereotype.Component&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;javax.annotation.PostConstruct&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#a2f&#34;&gt;@Component&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;CustomRabbitSend&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;implements&lt;/span&gt; RabbitTemplate&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;ConfirmCallback&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; RabbitTemplate&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;ReturnCallback&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;final&lt;/span&gt; Logger LOG &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; LoggerFactory&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;getLogger&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;CustomRabbitSend&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;

    &lt;span style=&#34;color:#a2f&#34;&gt;@Autowired&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;private&lt;/span&gt; RabbitTemplate rabbitTemplate&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#a2f&#34;&gt;@PostConstruct&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#b00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;init&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(){&lt;/span&gt;
        rabbitTemplate&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;setConfirmCallback&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
        rabbitTemplate&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;setReturnCallback&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#a2f&#34;&gt;@Override&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#b00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;confirm&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;CorrelationData correlationData&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#b00040&#34;&gt;boolean&lt;/span&gt; b&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; String s&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//到达Exchange交换机，会调用此方法
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(!&lt;/span&gt;b&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
            LOG&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;error&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;消息发送异常!&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
            LOG&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;info&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;发送者收到确认，correlationData={} ,ack={}, cause={}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; correlationData&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;getId&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(),&lt;/span&gt; b&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; s&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#a2f&#34;&gt;@Override&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#b00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;returnedMessage&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;Message message&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#b00040&#34;&gt;int&lt;/span&gt; i&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; String s&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; String s1&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; String s2&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//没有到达Queue队列中，会调用此方法
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;        LOG&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;info&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;returnedMessage ===&amp;gt; replyCode={} ,replyText={} ,exchange={} ,routingKey={}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; i&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; s&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; s1&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; s2&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;交换机和队列绑定&#34;&gt;交换机和队列绑定&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;Exchange&lt;/code&gt; 交换机需要通过 &lt;code&gt;routingKey&lt;/code&gt; 才能将消息传递到 &lt;code&gt;Queue&lt;/code&gt; 队列中（本文只用到 &lt;code&gt;direct&lt;/code&gt; 类型，其实无需绑定，&lt;code&gt;fanout&lt;/code&gt;、&lt;code&gt;topic&lt;/code&gt; 类型才需要）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.context.annotation.Configuration&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.amqp.core.Binding&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.amqp.core.BindingBuilder&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.amqp.core.DirectExchange&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.amqp.core.Queue&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.context.annotation.Bean&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;


&lt;span style=&#34;color:#a2f&#34;&gt;@Configuration&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;DirectRabbitConfig&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//队列
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a2f&#34;&gt;@Bean&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; Queue &lt;span style=&#34;color:#00f&#34;&gt;customDirectQueue&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;new&lt;/span&gt; Queue&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;testQueue&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//Direct交换机
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a2f&#34;&gt;@Bean&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; DirectExchange &lt;span style=&#34;color:#00f&#34;&gt;customDirectExchange&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;new&lt;/span&gt; DirectExchange&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;testDirectExchange&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//将队列和交换机绑定
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a2f&#34;&gt;@Bean&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; Binding &lt;span style=&#34;color:#00f&#34;&gt;bindingDirect&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt; BindingBuilder&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;bind&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;customDirectQueue&lt;span style=&#34;color:#666&#34;&gt;()).&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;to&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;customDirectExchange&lt;span style=&#34;color:#666&#34;&gt;()).&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;with&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;testRoutingKey&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;发送&#34;&gt;发送&lt;/h1&gt;
&lt;p&gt;传递 &lt;code&gt;CorrelationData&lt;/code&gt; 类，包含消息唯一标识（&lt;code&gt;AmqpTemplate&lt;/code&gt; 类无法传递，之前一直用的这个，死活找不到方法）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;
&lt;span style=&#34;color:#a2f&#34;&gt;@Component&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;TestScheduled&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#a2f&#34;&gt;@Autowired&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;private&lt;/span&gt; RabbitTemplate rabbitTemplate&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#a2f&#34;&gt;@Scheduled&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;fixedDelay &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; 3000&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#b00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;errorSpiderRerun&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(){&lt;/span&gt;
        String content &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;test rabbit and now &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; LocalDateTime&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;now&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;();&lt;/span&gt;
        CorrelationData cId &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;new&lt;/span&gt; CorrelationData&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;unique key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
        rabbitTemplate&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;convertAndSend&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;testDirectExchange&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;testRoutingKey&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; content&lt;span style=&#34;color:#666&#34;&gt;,&lt;/span&gt; cId&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;接收&#34;&gt;接收&lt;/h1&gt;
&lt;p&gt;用 &lt;code&gt;Message&lt;/code&gt; 类接收。目前我用的是 String 传输，可以配置成 JSON 传输更好些。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;com.alibaba.fastjson.JSON&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;com.alibaba.fastjson.JSONException&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;com.alibaba.fastjson.JSONObject&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.slf4j.Logger&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.slf4j.LoggerFactory&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.amqp.core.Message&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.amqp.rabbit.annotation.RabbitListener&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.beans.factory.annotation.Autowired&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;org.springframework.stereotype.Component&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#a2f&#34;&gt;@Component&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;CustomRabbitReceiver&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;final&lt;/span&gt; Logger LOG &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; LoggerFactory&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;getLogger&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;CustomRabbitReceiver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;

    &lt;span style=&#34;color:#a2f&#34;&gt;@RabbitListener&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;queues &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;testQueue&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#b00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;listen&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;Message message&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
        String body &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;new&lt;/span&gt; String&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;message&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;getBody&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;());&lt;/span&gt;
        LOG&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#7d9029&#34;&gt;info&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;receiver from python:&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; body&lt;span style=&#34;color:#666&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;谁的锅&#34;&gt;谁的锅&lt;/h1&gt;
&lt;p&gt;加了验证后，Java 端没有丢失，另一端消息也确实拿掉了，研究可能是多线程的问题，之前用的是 &lt;code&gt;pika&lt;/code&gt;，官方说多线程不安全，后续可以改为 &lt;code&gt;rabbitpy&lt;/code&gt; 更安全。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关联阅读&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rabbitpy.readthedocs.io/en/latest/index.html#&#34;&gt;rabbitpy documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://helloqb.xyz/post/2020/0515_rabbitmq/&#34;&gt;RabbitMQ 实现跨语言通信&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/qq_35387940/article/details/100514134&#34;&gt;Springboot 整合RabbitMq ，用心看完这一篇就够了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.spring.io/spring-amqp/reference/html/&#34;&gt;Spring AMQP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://helloqb.xyz/post/2020/0728_rabbitmq.html - ©DRay. 本站遵循 CC-BY-NC 4.0 协议</description>
        </item>
    
    
    
        <item>
        <title>耳机初烧之旅</title>
        <link>https://helloqb.xyz/post/2020/0713_headphone.html</link>
        <pubDate>Mon, 13 Jul 2020 00:00:00 +0000</pubDate>
        
        <guid>https://helloqb.xyz/post/2020/0713_headphone.html</guid>
        <description>哲学家 https://helloqb.xyz/post/2020/0713_headphone.html -&lt;h1 id=&#34;入门穷烧&#34;&gt;入门穷烧&lt;/h1&gt;
&lt;p&gt;大三，不知何事引起，对耳机产生兴趣，可能是看到论坛们一堆 &lt;em&gt;&lt;strong&gt;高音甜，中音准，低音沉&lt;/strong&gt;&lt;/em&gt; 的分析，感觉他们从里面获得了很大的满足，所以也想尝试一下。&lt;/p&gt;
&lt;p&gt;鉴于一直以来耳机不都是十块钱的印象，只能将价位定位在了一两百。瞄准两款 &lt;code&gt;AKG420&lt;/code&gt; 和 &lt;code&gt;JVC HA-S500&lt;/code&gt;。&lt;code&gt;HA-S500&lt;/code&gt; 在网上的形容词是 &lt;em&gt;&lt;strong&gt;白菜神器&lt;/strong&gt;&lt;/em&gt;，说外国某论坛关于此耳机盖了很多层楼。&lt;code&gt;AKG420&lt;/code&gt; 名声更大，知乎初烧推荐里几乎都有这款。巧了，宿舍串门的时候正好看到同学在用，试了下，佩戴舒适，低音有氛围，颜值低调却在线，很喜欢，现在想来还是想拥有一部。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&#34;https://4fexvw.dm.files.1drv.com/y4mLa19I26G29GMz6xYVSKU70grkdx10MkEQ2e2Rx-pWxUJeMH1nVxg87hSv6FEOXzSCh8C_UG8SblqW1w3J5VR1msmWwiXo1e8W2WwCtUu5iXKSp8SDIvvCrOJDraKo342Xgj57fQgRlLzvAAXOcHiZ5ZcZnahjLKBQspfNqWzuvVLiXhphQ6k-65MvZA1GaWGdP50NIzmFZLdEw8mwVqMxA?width=660&amp;height=422&amp;cropmode=none&#34; width=&#34;660&#34; height=&#34;422&#34; /&gt;&lt;/center&gt;&lt;p&gt;
&lt;p&gt;可能是得不到的永远在骚动，我最终选择了 &lt;code&gt;HA-S500&lt;/code&gt; 。怀着无比激动的心情收到后，很爱惜，很享受，什么高音低音的也瞬间都感觉有了，经常晚上关灯听很久。现在想来，脑放的成分居多，此耳机声音同价位一般，唯一可以吹的是它的质量，拿到手里感觉就是特别结实，一度让我对日本制造印象特别好。现在为止已经换了两个耳套，它仍然硬硬的，躺着抽屉里，等我偶然间想起。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&#34;https://4vexvw.dm.files.1drv.com/y4mlVGdYB2Pl1VROA8AYOcm043MZ7V3fGDmJpFF989ZhyXyAT-AR7smIHDulwJaN9OHeRe3Xa7LFYxYyKOqkuxqgmdadoRlyNiGKwZhtXZikFgbXjuVibAdFcr__rGJhbwH__sw1HLkJ_qxrMXOCYwrVIkysNYoTAlnrFRSpXv03PQzBjC3Obh9BA8PWT_4dT2gM1B5F9FTZhScWJclKK-4dQ?width=719&amp;height=1500&amp;cropmode=none&#34; height=&#34;500&#34; /&gt;&lt;/center&gt;&lt;p&gt;
&lt;p&gt;后来又买了 &lt;code&gt;潜99&lt;/code&gt; 和 爱华 &lt;code&gt;AIWA HP-M38&lt;/code&gt;，&lt;code&gt;潜99&lt;/code&gt; 入耳式的没啥印象，&lt;code&gt;HP-M38&lt;/code&gt; 还有些印象，因为很轻，佩戴很舒服，而 &lt;code&gt;HA-S500&lt;/code&gt; 特别夹耳。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&#34;https://2lexvw.dm.files.1drv.com/y4mcGknTQ8z-xUK9_S96Ts1lpErHF3krrlcLu6a5sC5JZnFOTejX0p7HvcCd6TnDmrcDZ94NmLpwB-xJsHD_NuPujWTI1WpFEeEvtlT6B1_8PVFhakkqlzE1qO0MV1-QiEo8X1N7n9JroMzEJV_SmFzCX3UMnmLa_2JkAxkYSui0uUp_Wi7BxZeLhU1navnGOmA_Vlujr3BumpH6S3xosxNyg?width=660&amp;height=490&amp;cropmode=none&#34; height=&#34;400&#34; /&gt;&lt;/center&gt;&lt;p&gt;
&lt;h1 id=&#34;再烧&#34;&gt;再烧&lt;/h1&gt;
&lt;p&gt;又不知何事引起，想再烧下耳机，也了解到好耳机真的需要上放，而上放对于我这种简约派来说想想都麻烦，需要把歌曲导进导出的，没法直接用手机听。所以我下了个决定，只直推试听，不行就不再烧。
有了工资后，定位当然也高了，盖得排行里，锁定了接近三千价位的歌德 &lt;code&gt;SR325e&lt;/code&gt;。但三千毕竟不少，淘宝上找到个商家可以试听，每天 50，遂下单。等待期间看到了魅族 HiFi 解码耳放这么个小玩意，说能使手机推力变大，也下单了。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&#34;https://5lexvw.dm.files.1drv.com/y4m0rNlBvR8r7bVyzEn3ho03Nn67wkCGEzbALRyiMuljHlBpzqjiWDPBbhA5nAZjcO7LawvaqEcxGCXCX02hUfywr-IIBKEbgjYp3Pi8IN3ciIcrrDR4zXeUZNmj0t7NFmSWwgiOqgdlPFlda7pdZFKICC8o3kW7UN58jDC5JAtUjAz09M7Y0tYqBb1tDRxx-YlnxObRtIeNxxALqk-fBWRew?width=1024&amp;height=1024&amp;cropmode=none&#34; height=&#34;500&#34; /&gt;&lt;/center&gt;&lt;p&gt;
&lt;p&gt;拿到后，没感觉多少惊喜，有效果，但不值得花三千，算了，退单，再也不烧。&lt;/p&gt;
&lt;p&gt;可心里总是还有欲望，别人怎么能听得这么爽，我是木耳吗，难道真得上放才行?&lt;/p&gt;
&lt;p&gt;退单后，依旧在论坛贴吧瞎逛，忽然发现了个新词 &lt;code&gt;USB独占&lt;/code&gt;。大概意思是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Android 系统为了兼容不同 APP 音频同时输出，需要使用 Mixer(混音模块)将这些声音混在一起后输出，Android 混音输出的采样率固定为 48k，如果某个 APP 输出的声音格式和混音输出结果不一样，就需要 SRC（采样率转换），这对音质是一个大大的损伤。而在独占模式下，APP 会把数字信号直接送给 USB 系统，通过 USB 接口送给数字耳机。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个理论又勾起了我的欲望。但是 &lt;code&gt;SR325e&lt;/code&gt; 已经被退了，想来好久都没买耳机了，再买一个耳机用吧，等着 &lt;code&gt;HA-S500&lt;/code&gt; 用坏怕是不可能了。&lt;/p&gt;
&lt;p&gt;逛了一番后，买了 &lt;code&gt;HIFIMAN SUNDARA&lt;/code&gt;。我靠，真的是独占的原因！！！&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&#34;https://21exvw.dm.files.1drv.com/y4ml8A0L8Daikc_GPGZI0mNmQNPVcPKQ9TYfqKIr4ncoqYgApSZ8h3moU2siNU3BpVIr_mWB7WeX8i8Azr0--p7ncpECxGv9_0RW5Y4IMjBsyBmn9FJ9nI-IlGNzOCeHmGp-DcI8DgUeWPYjhOJpeSJPCaPZbAqQ6NEb9T1vWuMwmuYTtKMsWu4g0mIdOCGXU2GsFumh_Y7LUi-aP62tp14bA?width=800&amp;height=800&amp;cropmode=none&#34; height=&#34;500&#34; /&gt;&lt;/center&gt;&lt;p&gt;
&lt;p&gt;欲望被彻底勾起，先是觉得 &lt;code&gt;SUNDARA&lt;/code&gt; 低频差点劲，二手了 &lt;code&gt;DT990&lt;/code&gt; 和 &lt;code&gt;DT1350&lt;/code&gt;，&lt;code&gt;DT1350&lt;/code&gt; 山洞音没感觉，&lt;code&gt;DT990&lt;/code&gt; 解析好，人声远，低频足，但齿音更重。不行，还是不够完美。接着逛，reddit 上 &lt;code&gt;HD58X&lt;/code&gt; 呼声很高，国内竟然没有专卖店，学了下海淘，竟然比想象中简单的多。一个月后才拿到手，没有期待的好，但也有所提升。&lt;/p&gt;
&lt;p&gt;闲鱼这玩意不能逛，尤其是耳机这种不嫌多的产品，这不一开始的 &lt;code&gt;SR325e&lt;/code&gt; 降到了 900！这还不抢！卖家也热情，实话实说，头梁处断了（后面淘宝 50 块换了个新的），也想退烧了，所以卖的低点，又说 &lt;code&gt;SR325e&lt;/code&gt; 不上放没法听。&lt;/p&gt;
&lt;p&gt;一句话，又海淘了个 &lt;code&gt;Atom 耳放&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://3fexvw.dm.files.1drv.com/y4mdas9dW8lyZsA8KwnovQagDWvGofsnJXT1QAamKg5euKFeyMBLaCXqJ9SnnWJ6GY2V83vaDwkVlaoFXfS16nFZFXTKAl9pVQPCibS9O6XeF-Z5p1RxbbF89Ro289Xvc_5YJO12aF8QVmFCIY9DLx-hhXOSBbkhirLLxH_u0WiJ50w31AtpHz3bRlDKnRmKeKZWT6BTCx13SFPOeGbp1q7cg?width=2124&amp;height=1131&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
&lt;p&gt;耳放确实得要有。&lt;code&gt;SUNDARA&lt;/code&gt; 在 reddit 论坛里很火的，但我初听时除了声场大些其他没啥感觉，低音不够，接上耳放后低音瞬间好多了。&lt;code&gt;SR325e&lt;/code&gt; 接上后解析也更好，声音更凝聚。但还是一直的问题，没期待的那么惊喜，没论坛里烧友那么有感触&amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;p&gt;忽然想到了一直不坏的 &lt;code&gt;HA-S500&lt;/code&gt;，拿起来听了下，我靠！也太难听了吧，声音像糊了层纸一样。顿悟：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;每一次的耳机的提升，亦或是器材的变化虽让音质提升微小，但最后汇集起来，确实是一种让人回不去的听觉享受。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最后的最后，我还是退烧了，耳机带来的提升远远不如歌曲本身，何况我也不是很喜欢听歌（这也是我一直想打自己的原因，MD 不听歌你烧个毛啊）&amp;hellip;&amp;hellip;当然了，由奢入俭难，想要回到几十块是不可能了，后面可能哪个耳机火了，闲鱼会试听玩玩。&lt;/p&gt;
&lt;h1 id=&#34;聊聊听感&#34;&gt;聊聊听感&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;AKG420&lt;/code&gt; &amp;amp; &lt;code&gt;JVC HA-S500&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;再选一次的话，我会选择 &lt;code&gt;AKG420&lt;/code&gt;，它佩戴更舒服些，颜值也比 &lt;code&gt;HA-S500&lt;/code&gt; 高，&lt;code&gt;HA-S500&lt;/code&gt; 摸着结实，耐操。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;HIFIMAN SUNDARA&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;HIFIMAN 家的东西真是跳水王，但在国外却深受欢迎，reddit 上经常有它的身影，获奖也很多。佩戴舒适，颜值喜欢，初听感受声场大，但低音欠缺些，总感觉没推好，果然上放后好很多。可能这也是跳水的原因，上放才能出好声，它却打着直推的标签。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Beyerdynamic DT990&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;初听惊艳，声场大，人声远，解析好，但人声太刺了，听了会就受不了。上放后好多了，但还是有点刺，听说猛煲有改善。还有一点挺好，不夹眼镜。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&#34;https://51exvw.dm.files.1drv.com/y4mUgrQykrAA1UBC4MmMmtZRxoghduuvsu4iWpSwLETHaoyWLeX4V20s3DKGJTHRTdsB0rZa3FZl5mulAAkooAo2VLzg9Bk0_q2zZLv8CetI79fOS20w6a6ZX2dReBpuS25I-pvLxKM01chitf1Ebwnmb1nP9YUtcWWkVkKek05lDj_EeUXvCr6pLZwuALG0RMf1wpWtAnaRfIKD30_eCwoZw?width=1024&amp;height=822&amp;cropmode=none&#34; height=&#34;400&#34; /&gt;&lt;/center&gt;&lt;p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Beyerdynamic DT1350&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;山洞音，官方价 1700，闲鱼 700 入的，再卖 200&amp;hellip;&amp;hellip;MD 不卖了。隔音好，易推，佩戴舒适，没必要贱卖。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&#34;https://2lfgpq.dm.files.1drv.com/y4mLgpSJA1t_w0PnMI-Y7fJHhwklQq2z820cBkyouHfOKnaWBY4x6o8biHg8Jl4b2ZQp1CyjF2YFqCol-U4Y4s9Auhm2KXbU_NYOhNpHOMS1LePMYbz9fyjqAX-8nU-hWXrdP6GjWlXm-SBEj7C-EG3psqs1Wkq7jSNEVJ3i4X4Bft8_wPvDnOvrjiFqwrUwMhhxiua8GPCPkYxeTNtaEjqrg?width=1565&amp;height=1715&amp;cropmode=none&#34; height=&#34;400&#34; /&gt;&lt;/center&gt;&lt;p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;MASSDROP X SENNHEISER HD58X&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;MASSDROP X SENNHEISER HD 58X JUBILEE 联名款。Youtube 上有个 UP 主评测说就是 &lt;code&gt;HD660S&lt;/code&gt; 加了层纸，而 &lt;code&gt;HD660S&lt;/code&gt; 是三千价位的，它一千价位，可以说性价比极高了。入手后，却没什么惊喜，可能我的耳放推力不足。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&#34;https://21fgpq.dm.files.1drv.com/y4mZZwmP3xkGzDJ9tW3wAYueBrg2WhQz01dwVQWtg3oyy8Uh7VY1IkSzzTDW3FrqTHDVyzzS7HjzTnwVyEJO5R0gOysOj-eEDUTJlKssrrcODkmflN9Uj4MuOCr0dRhpdQ7abh15M5upFilY9K3teCGtvNINPUg3FrahT5Vxz_GlStpFD9wixZLt07uAoFjOHg_zzUntjgKuWK4I_3R3OZrwg?width=1024&amp;height=683&amp;cropmode=none&#34; height=&#34;400&#34; /&gt;&lt;/center&gt;&lt;p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Grado SR225e&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;卖家说人声好，初听时起鸡皮疙瘩了。女声渲染的是不错，但我觉得一般，可能我不好这口吧。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&#34;https://3vfgpq.dm.files.1drv.com/y4mCG8O2KWURj3Bjjvk_0KHySiuuOourBM1FO0kMWbTDgEiDOCHDdVheQ5PxQuC_TXj7pAlC7vHMPYMvTzW3olzQKZ31wGp0qX1KGNVCzuRjrra2O4xn6zSx_GMyisU0GOAKOlu6SoZ7g1hOQFaPG9BOT1q0Hu9GjStTjXXsOoTIPYn3sIuDFBocD1vvuAWOCMmYYgbrpSLO3oCbUGLZBXxIg?width=638&amp;height=660&amp;cropmode=none&#34; height=&#34;400&#34; /&gt;&lt;/center&gt;&lt;p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Grado SR325e&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最钟意的一款，声音热情洋溢，摇滚的那股劲，就它声出的好听，其它的都稍微欠缺些。直推好，上放更好。&lt;/p&gt;
&lt;h1 id=&#34;最终搭配&#34;&gt;最终搭配&lt;/h1&gt;
&lt;p&gt;最终搭配：APP（USB Audio Player PRO）+ 解码（MEIZU HIFI DAC PRO）+ 耳放（JDS LABS ATOM AMP）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;USB Audio Player PRO&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用于实现 USB 独占，谷歌商店 9 美元，小贵，可用海贝音乐代替。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;MEIZU HIFI DAC PRO&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;很强大！它让手机也能玩得转 HiFi，配合 Atom 耳放可以将性能发挥到极致。我是看了削腚恶的文章 &lt;a href=&#34;https://zhuanlan.zhihu.com/p/94991395&#34;&gt;魅族HiFi解码耳放与魅族HiFi解码耳放Pro评测&lt;/a&gt; 种草的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“魅族线与魅族线Pro都是音频性能非常优异的解码耳放转接线；&lt;/p&gt;
&lt;p&gt;魅族厂商完全没有虚标参数；
魅族线的实际推力为80mW@32Ω，13mW@300Ω；
魅族线Pro的实际推力为100mW@32Ω，13mW@300Ω；
魅族线与魅族线Pro的实际失真都&amp;lt;0.0002% (1kHz，300Ω负载)
魅族线与魅族线Pro的实际信噪比和动态范围都&amp;gt;123dBA (300Ω负载)&lt;/p&gt;
&lt;p&gt;考虑到二者的价格，可以算是性价比搅乱市场的产品，建议根据实际情况，酌情购买。&lt;/p&gt;
&lt;p&gt;魅族今年先后发布的HiFi解码耳放、HiFi解码耳放Pro告诉我们，再没落的手机厂的供应链控制，研发实力，品控质检水平，也不是小众的HiFi厂家可以望其项背的。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&#34;https://5lfgpq.dm.files.1drv.com/y4mcJn1MvzY4BfOXq405V6xEbMKqezwek-MAxODlkhaUDtg8Madvff1UgV4yYOmxMZo3APDKF7AmvDr2eLKXD1KAKmS_Z3UOVWtXPcxJACDZMM3auYU96ONgNa1oWGe10uWlBYYdHwNvT58M11ecbnoL6g5gW8AH4bN5Kg9ShOhntjBXKzHV0AEZCQdSKxSmvn2HBJwXqPFHABLDH6fJjbRiQ?width=2814&amp;height=1357&amp;cropmode=none&#34; /&gt;&lt;/center&gt;&lt;p&gt;
&lt;h1 id=&#34;软件&#34;&gt;软件&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;无损歌曲&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;QQ 音乐和网易云音乐上下载的无损歌曲都进行了加密，第三方无法播放。好在不难，Github 上可以搜到大神写的转换工具。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;mp3tag&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;强迫症的可通过此软件修改歌曲元数据，添加封面，更改专辑名啥的。&lt;a href=&#34;https://www.mp3tag.de/index.html&#34;&gt;官网&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;footbar&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;flac 格式个人觉得最好，cue 有时候识别不了，wav 又没法写入标签。通过 footbar 都可以转成 flac 格式。&lt;a href=&#34;https://www.foobar2000.org/&#34;&gt;官网&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;后续2020-08-06&#34;&gt;后续（2020-08-06）&lt;/h1&gt;
&lt;p&gt;没到一个月就打脸了，入了拓品家的 &lt;code&gt;Topping E30&lt;/code&gt;&amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://rt3upw.dm.files.1drv.com/y4muGjkUE_nl0MlUXnEF7iEVdmzQ2tz3G6HNjqD_XuuvC9CawUWjn2KqiLXRz-VNKl7RLjUspiBoq1Jf9AKlaSvC41aQ6Pnducf6nXORsr3c-iU97kcQslJ-qjGviYQjAExNgg60WRKc-gUuuWeGMuqiesZvLg0O-bZeSwN7JfgzRuHm87rKML2GbEiu1oTZ297wLiv-BCXv458aNij5TqeWw?width=1024&amp;height=770&amp;cropmode=none&#34;/&gt;&lt;/p&gt;
&lt;p&gt;起初以为那种台机必须把歌曲先导入进去才能听，觉得很麻烦。后来了解到可以用手机或者电脑作为输入源的。还有我自己没有外出听歌的习惯，算了，抱着砖听就抱着砖听吧。&lt;/p&gt;
&lt;p&gt;把魅族线换成 E30 后惊喜了一晚上，听感又上升了两个台阶，有些歌曲听到了之前没注意的细节，至此，我觉得应该发挥了我这款歌德耳机所有的潜力了。&lt;/p&gt;
&lt;p&gt;后续再烧的动力，想到两个方面，一是手机连着解码器的线挺碍事的，边听边玩手机时拖着线不太方便，接口处还容易松动，后续想要尝试下蓝牙解码器。二是现在这套装备我觉得能推得动大部分耳机了，想要尝试下难推的耳机，之前一直以易推作为选耳机的标准的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最后想说的是，还挺烧钱的，克制点，老弟！&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;后续2020-08-17&#34;&gt;后续（2020-08-17）&lt;/h1&gt;
&lt;p&gt;没到半个月又打脸了，入了拓品家的 &lt;code&gt;BC3&lt;/code&gt;&amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&#34;https://p93upw.dm.files.1drv.com/y4mD4m01PCQrODGUigK2FGjEaN_u5aau9jCvHzqECHLfphSS_VFlACqjzTih2OvP0ZwXuCz2P2EeCQswGxZYNNRx7PAvwcOQiAW2fp8ShxNQkqTD5lwHJC2RgJENsEuZYkmngcopxOXVA5B5d2p0c2V21zWPuuXBbiNUyhNx6O4pt9wv3MvYhpUl0QtcJ1Gxw0P45lGgU8SCiA93iTCE_GKxA?width=753&amp;height=1024&amp;cropmode=none&#34; height=&#34;600&#34; /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;因为手机连接 DAC 时得拖着挺长的一根线不够方便，想尝试下蓝牙，经了解，LDAC 传输虽然是有损传输，但是已经够了。连接后，无奈发现，虽然我的手机支持外接 DAC 自动切换采样率，但是 LDAC 模式下却 SRC 了。&lt;/p&gt;
&lt;p&gt;SRC 其实对音质的损耗很大，之前没在意，现在听来确实有挺大差距。网上搜了下，索尼的 &lt;code&gt;Music Center&lt;/code&gt; 可以解决 SRC 问题，但是我的手机只成功过两次，经常是切换了采样率，但是播放却变得异常缓慢，暂先搁置吧，等着 APP 兼容或者手机兼容。&lt;/p&gt;
- https://helloqb.xyz/post/2020/0713_headphone.html - ©DRay. 本站遵循 CC-BY-NC 4.0 协议</description>
        </item>
    
    
  </channel>
</rss> 