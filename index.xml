<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>哲学家</title>
    <link>https://helloqb.xyz/</link>
    <description>Recent content on 哲学家</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>©DRay. 本站遵循 CC-BY-NC 4.0 协议</copyright>
    <lastBuildDate>Wed, 01 Jan 2020 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://helloqb.xyz/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>个人笔记 - Jupyter 笔记汇总</title>
        <link>https://helloqb.xyz/post/2020/0615_jupyter/</link>
        <pubDate>Mon, 15 Jun 2020 00:00:00 +0000</pubDate>
        
        <guid>https://helloqb.xyz/post/2020/0615_jupyter/</guid>
        <description>哲学家 https://helloqb.xyz/post/2020/0615_jupyter/ -&lt;p&gt;Jupyter 作为 Python 笔记相当不错，可以实时运行代码。在此备份。&lt;/p&gt;
&lt;h1 id=&#34;函数&#34;&gt;函数&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://helloqb.xyz/post/ipynb/0617_func.html&#34;&gt;&amp;lt;html版本&amp;gt;&lt;/a&gt; &lt;a href=&#34;https://helloqb.xyz/post/ipynb/0617_func.ipynb&#34;&gt;&amp;lt;原始版本&amp;gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;返回 df2 按照 df1 的 id 排序&lt;/li&gt;
&lt;li&gt;数据通用预处理&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;其他&#34;&gt;其他&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Difference between map, applymap and apply methods in Pandas.&lt;/strong&gt; &lt;a href=&#34;https://helloqb.xyz/post/ipynb/0615_df_map.html&#34;&gt;&amp;lt;html版本&amp;gt;&lt;/a&gt; &lt;a href=&#34;https://helloqb.xyz/post/ipynb/0615_df_map.ipynb&#34;&gt;&amp;lt;原始版本&amp;gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://helloqb.xyz/post/2020/0615_jupyter/ - ©DRay. 本站遵循 CC-BY-NC 4.0 协议</description>
        </item>
    
    
    
        <item>
        <title>个人笔记 - 正则表达式</title>
        <link>https://helloqb.xyz/post/2020/0605_regex/</link>
        <pubDate>Fri, 05 Jun 2020 00:00:00 +0000</pubDate>
        
        <guid>https://helloqb.xyz/post/2020/0605_regex/</guid>
        <description>哲学家 https://helloqb.xyz/post/2020/0605_regex/ -&lt;h1 id=&#34;介绍&#34;&gt;介绍&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;正则表达式（Regex）使用单个字符串来描述、匹配一系列符合某个句法规则的字符串。 &amp;ndash; &lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F&#34;&gt;维基百科&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;jupyter-版&#34;&gt;Jupyter 版&lt;/h1&gt;
&lt;p&gt;例子在 Jupyter Notebook 中展示更清晰些，所以就直接上传了 Jupyter 版本的。&lt;a href=&#34;https://helloqb.xyz/post/ipynb/0605_regex.html&#34;&gt;&amp;lt;html版本&amp;gt;&lt;/a&gt; &lt;a href=&#34;https://helloqb.xyz/post/ipynb/0605_regex.ipynb&#34;&gt;&amp;lt;原始版本&amp;gt;&lt;/a&gt;&lt;/p&gt;
&lt;iframe src=&#34;https://helloqb.xyz/post/ipynb/0605_regex.html&#34; style=&#34;width:100%;height:600px;border:0px&#34;&gt;这是A&lt;/iframe&gt;
&lt;h1 id=&#34;用法&#34;&gt;用法&lt;/h1&gt;
&lt;h2 id=&#34;文本编辑器替换&#34;&gt;文本编辑器替换&lt;/h2&gt;
&lt;p&gt;使用 &lt;code&gt;$1&lt;/code&gt; 代替某一组。&lt;/p&gt;
&lt;p&gt;如替换隐藏手机号中间四位，查找正则为 &lt;code&gt;(\d{3})(\d*)(\d{4})&lt;/code&gt;，替换为 &lt;code&gt;$1****$3&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;Java 端也采用此方法。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 手机号隐藏中间4位：
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;hidePhone&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String phone&lt;span style=&#34;color:#f92672&#34;&gt;){&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; phone&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;replaceAll&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(\\d{3})(\\d*)(\\d{4})&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$1****$3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;常用正则表达式&#34;&gt;常用正则表达式&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;中文&lt;/strong&gt;：&lt;code&gt;[\u4e00-\u9fa5]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;匹配某个字符在最后一次出现的位置&lt;/strong&gt;：&lt;code&gt;[^字符]+$&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;匹配不在引号里的逗号&lt;/strong&gt;：&lt;code&gt;,(?=([^\&amp;quot;&#39;]*[\&amp;quot;&#39;][^\&amp;quot;&#39;]*[\&amp;quot;&#39;])*[^\&amp;quot;&#39;]*$)&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;概括字符集&#34;&gt;概括字符集&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字符&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;[0-9]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\D&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;[^0-9]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\w&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;[A-Za-z0-9_]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\W&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;[^A-Za-z0-9_]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\s&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;空白字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\S&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;非空白字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;. &lt;/code&gt;&lt;/td&gt;
&lt;td&gt;匹配除换行符&lt;code&gt;\n&lt;/code&gt;之外其他所有字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\t&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;匹配 TAB 键&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;推荐&#34;&gt;推荐&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://regexper.com/&#34;&gt;regexper&lt;/a&gt; 这个网站可以帮助你更直观的展示正则表达式的逻辑。&lt;/p&gt;
- https://helloqb.xyz/post/2020/0605_regex/ - ©DRay. 本站遵循 CC-BY-NC 4.0 协议</description>
        </item>
    
    
    
        <item>
        <title>EXCEL 技巧之 - VLOOKUP 函数</title>
        <link>https://helloqb.xyz/post/2020/0604_vlookup/</link>
        <pubDate>Thu, 04 Jun 2020 00:00:00 +0000</pubDate>
        
        <guid>https://helloqb.xyz/post/2020/0604_vlookup/</guid>
        <description>哲学家 https://helloqb.xyz/post/2020/0604_vlookup/ -&lt;p&gt;VLOOKUP 可以实现类似数据库的 &lt;code&gt;LEFT JOIN&lt;/code&gt; 操作。&lt;/p&gt;
&lt;h1 id=&#34;官方文档&#34;&gt;官方文档&lt;/h1&gt;
&lt;p&gt;VLOOKUP（查阅值、包含查阅值的区域、包含返回值的区域中的列号、近似匹配（TRUE）或完全匹配（FALSE））。其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;要查找的值，也被称为查阅值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查阅值所在的区域。 请记住，查阅值应该始终&lt;em&gt;&lt;strong&gt;位于所在区域的第一列&lt;/strong&gt;&lt;/em&gt;，这样 VLOOKUP 才能正常工作。 例如，如果查阅值位于单元格 C2 内，那么您的区域应该以 C 开头。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;区域中包含返回值的列号。 例如，如果指定 B2： D11 作为区域，则应将 B 作为第一列，将 C 作为第二列进行计数，依此类推。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（可选）如果需要返回值的近似匹配，可以指定 TRUE；如果需要返回值的精确匹配，则指定 FALSE。 如果没有指定任何内容，默认值将始终为 TRUE 或近似匹配。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;实现&#34;&gt;实现&lt;/h1&gt;
&lt;p&gt;如下表格，想要知道左边哪些是已婚人士。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://21fnqa.dm.files.1drv.com/y4mxHOexyJpSInaOXFQ-H74qmhCXFiBSSZhKeDcOsl9Az95dc0BGgwvQaDCMNjqzbUMZNhwYclDPKYUtaKfBbRjomBuDLL1zQNtY1WchbEey-5TQVzERl9HPTXPUBDSx6yYgnUdqV7Z2JlL-wNTMX7o_lBmzW23zVifaXUS6S0RSsYDMhfmzOZ3eJOGLyXn7DX4M02UvjS1dV-xeHpDuYlUxg?width=612&amp;height=291&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. 输入 VLOOKUP&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在上表 2B 单元格内输入 &lt;code&gt;=VLOOKUP(&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 选择查找值&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;括号后第一个参数选中 2A，然后输入英文逗号。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://3ffnqa.dm.files.1drv.com/y4mNWqmpXbuJknhmxYTy_6wlJyY9U13gY1WfQ0K7IUBk67ok4Y9U9lKKXGLMeJsNtuZfrxlBkXgcixQA4uDIZ28cO5WvIg1ao_nZ9XlsLEoZH52wsl0AcvPrzWWx_STSMIB4aRTUSI7SZdBOz-HLVjecHAMkgpyhnvt4jTL8RqianLgZXNdsu8uDIgja_E4m6P2lwZtMzS_6S9AQFG6I6QqAg?width=612&amp;height=297&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 选择查找区域&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;括号后第二个参数选中 F:G 列，然后输入英文逗号。&lt;/p&gt;
&lt;p&gt;如果不选中整列，而是只是选中有数据部分如 F2:G4 列，则后续下拉拖动方式此参数会随之变化，导致没有得出想要的结果。&lt;/p&gt;
&lt;p&gt;全选时注意首行会不会影响结果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://3vfnqa.dm.files.1drv.com/y4m4xJvHy47-M1nmcu3d0c8PIOeuhzo-PFvKCjN9rcvxHRMMdJVLFb49TWk6aaDd2w23xWBBop85GmvfLRFs0HdWn8mnTTI8TGect2__N1zLMF2uTGQcCWSkVGNX9aYngUMK2tyRiY2DC7Quh9NYHzwk_4cT8L_VVNo-MpGJJFW13UvEUSpHzfaFZwFYmPjnIACoTBC1BDAAc8cfjr3vfOGRg?width=611&amp;height=302&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. 其他参数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第三个参数是匹配查阅区域的第几列，最后为是否精确匹配。&lt;/p&gt;
&lt;p&gt;最后整个公式为 &lt;code&gt;=VLOOKUP(A2,F:G,1,FALSE)&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 复制公式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;此时只是第一个单元格的结果，采用下拉拖动方式或者复制粘贴方式将公式复制到列中其他的单元格中。这两种方式粘贴的公式都会行自动变化。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://5lfnqa.dm.files.1drv.com/y4mmnfyHw_FLNQj4R4aZvCCz1zo5gm_tUTISAXTtyrtCBOn6BB-OsJ_N7XDgvtn_E92SQUNP5p6mHfOrOQ48qJQZl5f1-nw63LF78eq2oXFfF-2QHXfXEosGmFmYqwQt7OuJqYrI4vWXacKAFwG9sep5O2D1uerTu8ztzsAKl6POmj94eap3T2BDN5wpF91CC02TKjwwqcwoc-nRUz7dpP0VQ?width=617&amp;height=303&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 获取其他单元格&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第二列数据改下第三个参数为 2 就行了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://51fnqa.dm.files.1drv.com/y4m5hJfOGKRBm0nH7DWHQ0k_OJdmD7urFWDHjBE_eGtteA258Il5XP8L6MObW1uiYnQ1sDBDg6emSnoEapzZJqUmewielL1VawozZqR0G301koXwa0ayLyF6EoOczHQ6MhePa8l8Pv4wjggDm_siB9Z2vB4B99-Wev7R-Z07tec4pDokMVm_aP3fp0uOIFTkNl088UcDi1DAwcdOmbB-Vnosg?width=617&amp;height=301&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
- https://helloqb.xyz/post/2020/0604_vlookup/ - ©DRay. 本站遵循 CC-BY-NC 4.0 协议</description>
        </item>
    
    
    
        <item>
        <title>EXCEL 技巧之 - 相同单元格合并</title>
        <link>https://helloqb.xyz/post/2020/0604_merge/</link>
        <pubDate>Thu, 04 Jun 2020 00:00:00 +0000</pubDate>
        
        <guid>https://helloqb.xyz/post/2020/0604_merge/</guid>
        <description>哲学家 https://helloqb.xyz/post/2020/0604_merge/ -&lt;h1 id=&#34;需求&#34;&gt;需求&lt;/h1&gt;
&lt;p&gt;需求其实很简单，就是合并单元格，行数少的情况下一个一个点就行了，但是行数多的情况下就麻烦了，秉承着重复性工作一定能被计算机代替的想法，翻阅很久找到了方法，在此分享。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://31gyyw.dm.files.1drv.com/y4miPbLToyX_QudE2Tuhmf-khEmDqEgh9fO4pFq0SYcisR1bTjfqH2aCXLjOFDh-HL1TmNx2iNtba7qxK0yPJJJlK-KTQXTu9gdsI7hWYyDTIbKiiG6yKNge3h3DeJ-Iv9uhRPIJBC4KuEOCYUsq_KugpmcsbB36lc5TWJCluEdkX9QNSsSzcqJMrsYzP3etq3SxIOtrSmUsKYb16JKfo8EHQ?width=418&amp;height=251&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;实现&#34;&gt;实现&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;1. 数据（菜单栏） -&amp;gt; 分类汇总&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分类字段：需要合并的列，本例中为身份；&lt;/li&gt;
&lt;li&gt;汇总方式：无关，默认即可；&lt;/li&gt;
&lt;li&gt;选定汇总项：同分类字段；&lt;/li&gt;
&lt;li&gt;替换当前分类汇总：无关，默认即可；&lt;/li&gt;
&lt;li&gt;每组数据分页：不选；&lt;/li&gt;
&lt;li&gt;汇总结果显示在数据下方：选中&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://4fgyyw.dm.files.1drv.com/y4mdpA_mKe7ja74RTuqL3uh6TVetdvqyrTMtmia7YX4_6nUZPEvw_OgFgcWhFuEVsruWR0_56NWOATP2D7Ypv_lWI82CKo-FzQYNn167XegYxcwzls21vwln0Vzea-OPHYCEmLZK9II7Zlzw1SlXn4cMZO_BQ6sVTZk3TIN6Sh1rFirSuM-FrBgIc0YTQtB9X8vcgP-F5z1FzLuqLw88McQNA?width=433&amp;height=312&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 汇总列合并空值单元格&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对生成的汇总列进行空值定位，并合并空值单元格。操作如下：&lt;/p&gt;
&lt;p&gt;汇总列第一行填 1 -&amp;gt; 选中汇总列 -&amp;gt; 开始(菜单栏) -&amp;gt; 查找和选择 -&amp;gt; 定位条件：空值 -&amp;gt; 合并后居中&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://4vgyyw.dm.files.1drv.com/y4mz2_puQ_ai1GR6rARu-HVgdPFj_4ceRrcYzlFjRhqwCEfPeEAEwCa3hs1eeEUbZdYurpF9uHtVgb3I8J48mL0DKeJXLfdk52LyTYC2HZSmDBjPJ4uapvMYEjQTTJKWoa3pXCAp5JLm2EB-j1wbf-8m0xJBQcqw2ovTefKKMGsOvmYw_PfMiAQbS7T_qXDbfYM0CDZraANizNt4e3ML7Gl_A?width=407&amp;height=310&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 间隔一行（非必须）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果想要每一类间隔一行的话，使用操作 2 的步骤定位合并列（定位条件：数值）然后插入工作表行就行了。&lt;/p&gt;
&lt;p&gt;提一下这个是觉得定位这个功能很强大的样子，类似于编辑器中的多光标选择。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. 格式刷合并列&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将汇总列格式刷到合并列。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://2lgyyw.dm.files.1drv.com/y4mGGjq5crcBI8VL6sKd_ziCMDNdO2PE40DtdIu7xmTb3N6oILfZPXOgy5Hyjlnw_ZIQUZYbBiIUzTQuDCpmO7yokxxpO_XN7E64ci08ry0w_zN4VRAXJ1RRub8YXV1xpng9rc9237_sIpkQ7S30n64ZT7NgvtmciVXMDjZHwKGMi8OLoyw7IwDDftrMHxDCoa8_fZauumwWM2KQ5mn3oQsfg?width=400&amp;height=297&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. 删除分类汇总&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数据（菜单栏） -&amp;gt; 分类汇总 -&amp;gt; 全部删除。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://21gyyw.dm.files.1drv.com/y4munMdjMvbfIdvLd7d35jz9kCrHmlhQtr3nUkUM6rjiSIbxzP8vn8Hn2ZL-Nxfz9HAvno1zWdG50vFVEMzZuEfvpOM0d0x72_DH7t-wnmGeGJRgTI-pT0tn7ll3olFqYWoA0pUCC_8DZjDC__A5gcEq3MiK4FkbTYswFrSe3JuREKe35ty_mJO2sSTSwpq0B9Nuv7gsYpheOZcVlsRHE2vFg?width=289&amp;height=240&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
- https://helloqb.xyz/post/2020/0604_merge/ - ©DRay. 本站遵循 CC-BY-NC 4.0 协议</description>
        </item>
    
    
    
        <item>
        <title>四宫格办公壁纸制作</title>
        <link>https://helloqb.xyz/post/2020/0603_ps/</link>
        <pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate>
        
        <guid>https://helloqb.xyz/post/2020/0603_ps/</guid>
        <description>哲学家 https://helloqb.xyz/post/2020/0603_ps/ -&lt;h1 id=&#34;介绍&#34;&gt;介绍&lt;/h1&gt;
&lt;p&gt;以 Windows 自带纯色壁纸为基础，效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://31fnqa.dm.files.1drv.com/y4mPFyoM3lP_9rd-Vg1cstN75iwI2bXFcYyD5EMT5aYeMND199Uhbo3TvKSX3El_yT2DiiMLWbIDIJE5dg-IwNhjllVzxi97yPpFr7Zx9P_lczOSDYxdcnQ77ncpsezH6ITvxZtrdWUaYA7nyfZz2kr9dExDSJEmVKtPtg0TZdkmBCfHZzlHd4aPegP-keRBvZM6Tls9In5rRGjGrhjDGxzBA?width=1920&amp;height=1038&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;流程&#34;&gt;流程&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;1. 用 Photoshop 打开壁纸&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;个人喜欢纯色壁纸，Windows10 上可通过背景设置为纯色壁纸后截屏得到。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://21hota.dm.files.1drv.com/y4mPZtvaCaLpHRBmtv3Dp5g0aNBFwpE3svq99M08Fa71_52A_4Kj2p3EpbDuzidrBnEsCOPUPXczsofo3HBsbmkv-ErqUB99uuM2HugEpfxNiaGTgiZG_FP5Maja1ass_fzQraojiYrduDrx7RaXv3eieRoVRlrKCTkDdX2IFipPEeexA4NdZbbqzVxoJw237bpqfqgmqHIUT3tOT2s1vqFvQ?width=1920&amp;height=1040&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 新建图层并填充为白色&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;操作： 图层（菜单栏）-&amp;gt; 新建 -&amp;gt; 图层 -&amp;gt; 编辑（菜单栏）-&amp;gt; 填充 -&amp;gt; 背景色&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://3fhota.dm.files.1drv.com/y4meK5ev_0gzQVGaO-s8pRyhSqRaLkuHZegnssv6K68sWs1r1lZ_wW9OXu7xO9zSaHe-kTG-mvcHMn8bGYOP28ZlOfEKCBFALcgP_50f0n5y-DQLuTTG6-I_zDvqnBWD_jCOVYTjZcseoEtpq-HIMxw0G4AloLnhk9dMe6LJ4JkOhPqm2dTV5lffC-NQ-H4WJ55fpEJWAZw2AiIsThnRoPfIQ?width=1914&amp;height=1040&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 缩小一半长宽比&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;操作：编辑（菜单栏）-&amp;gt; 自由变换 -&amp;gt; W:49% H:49%&lt;/p&gt;
&lt;p&gt;49% 也就是留了 2% 的缝隙，可根据自己喜好修改。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://3vhota.dm.files.1drv.com/y4mdd-w-RhQf8xV47ASDL01uDZ7wgQD_232jOUsAEyOxD1LIMeFo-0x-2ZGjS2ifpZKdVe7R3DNNe9TZxysD47udWnW-sqdrx4sC03UHddtx39yTOmG5rGm7NTg5UpaQ4ADzbkYMADlDHj0Z2btDus7ULMk2zn4vuvZxzNpRwJxwjO_1PrFduCGrslPWa09qrOghIIUDhb4Ik4OlhqHpkWY4A?width=1920&amp;height=1040&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. 切割图层&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以变换后的图层作为选区，分别左上、左下、右上、右下复制图层。&lt;/p&gt;
&lt;p&gt;操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对齐：选中两个图层，点击菜单栏图层里的对齐，左对齐，然后再顶部对齐；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://4ffnqa.dm.files.1drv.com/y4mlbXCFCPRabp5uAMcIbDFM4Refu91x1X6PhlMS_xW7rT8VLgZPdVJr2446AKpxC1IyOyBy3xKYj3Y0lYdcpzTo-n5gpy2Gnvq1VfYlosOWJSI3U9HKM_lq9c6eDxeS9P4gAY_2Tew34suApC9UJCrDMa3PFjkcDA4eMLP2DCSzItZQid_LlBR8AOe0RQGLfMM_5KqEcsxA_OvccOWFTxe2Q?width=1920&amp;height=1039&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;载入选区：按住 &lt;code&gt;Ctrl&lt;/code&gt;，并点击白色图层的缩略图；&lt;/li&gt;
&lt;li&gt;复制图层：点击背景图层，点击 &lt;code&gt;Ctrl + J&lt;/code&gt;，将所选区域复制到新图层中；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://4vfnqa.dm.files.1drv.com/y4mebgrRn4sXRat0i8ikv7xk8sTkINQmXcAHgYoPs5COlZfnMgtXebQYDCzdZlju-C7fJNKpEw4MkViU46Tjr7W8A6hbJSWkiUVPDw-uWD17hOw0S8GTG5FnaUn21S9WlJ0cY9WhFMtyU9PFv6Lb_nA8jJbTwguMpjEKzHRqeoblBr-iUyq9_uyZeGTKToSvL96H9kF-sX2gIZuptCC2oqECg?width=1920&amp;height=1038&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;同样方式左下、右上、右下生成另外三个图层；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://5lhota.dm.files.1drv.com/y4mSmzC0rmXrJCRQGZKM7DCF7vmmcw9iVQnjYp-d82IPsChzBX-aWqOW4DbUt2EHjROM6x9p4fsOo2lGs1FNX5-bMxGn6q2muR5C8kr1O7xoAg1pTni4YGDYjQkinxFT2nLoTRaxlXn90wEq9V9Dqf4AyXlim0zkKXqLkKoYjZCLtVGkIxTPTFgw-ZCTJgVJAuy0hr7rt7oULJkVzLNsR8ELw?width=1920&amp;height=1038&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 增加图层样式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;双击图层打开图层样式，选择投影，距离和大小设置为 20 像素；&lt;/li&gt;
&lt;li&gt;右键图层拷贝图层样式，然后复制到另外三个图层中；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;大功告成，当然可根据自己喜好选择样式，添加相关文字等。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://51hota.dm.files.1drv.com/y4m5etRuVzlJgeR9p7lFrGdFuTvyPjAyaJvx50_mmJhYBXwq6qD87LfDvLnAY24Lb7eUvhqv9E0EVuJL1PZxIgqlsHiPjOUt7oQfmzs3Dwwzxe7pzgL1YhIFCs1eQmwLkgPVwkwwNSNUuCOJx55bLCpVADcF0xryHRgVQYTucl8vFB5tt6-W2g-Pk1xKz9BcFmWSuRE__6WUuSxKbAVGVZVXQ?width=1919&amp;height=1039&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
- https://helloqb.xyz/post/2020/0603_ps/ - ©DRay. 本站遵循 CC-BY-NC 4.0 协议</description>
        </item>
    
    
    
        <item>
        <title>Spring 定时任务</title>
        <link>https://helloqb.xyz/post/2020/0602_cron/</link>
        <pubDate>Tue, 02 Jun 2020 00:00:00 +0000</pubDate>
        
        <guid>https://helloqb.xyz/post/2020/0602_cron/</guid>
        <description>哲学家 https://helloqb.xyz/post/2020/0602_cron/ -&lt;h1 id=&#34;介绍&#34;&gt;介绍&lt;/h1&gt;
&lt;p&gt;本文主要记录下 cron 表达式的用法，方便下次使用。&lt;/p&gt;
&lt;h1 id=&#34;配置&#34;&gt;配置&lt;/h1&gt;
&lt;p&gt;程序主入口添加 &lt;code&gt;@SpringBootApplication&lt;/code&gt; 和 &lt;code&gt;@EnableScheduling&lt;/code&gt; 注解以启动定时任务。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; org.springframework.boot.SpringApplication&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; org.springframework.boot.autoconfigure.SpringBootApplication&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; org.springframework.scheduling.annotation.EnableScheduling&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#a6e22e&#34;&gt;@SpringBootApplication&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;@EnableScheduling&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;SchedulingTasksApplication&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;

	&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
		SpringApplication&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;run&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;SchedulingTasksApplication&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后方法上添加 &lt;code&gt;@Scheduled&lt;/code&gt; 注解就行了。当然类注解 &lt;code&gt;@Component&lt;/code&gt; 也必不可少。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Scheduled&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;fixedDelay &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 5000&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;reportCurrentTime&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
  System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Date&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;定时调度&#34;&gt;定时调度&lt;/h1&gt;
&lt;h2 id=&#34;fixeddelay&#34;&gt;fixedDelay&lt;/h2&gt;
&lt;p&gt;毫秒单位，以上一个调用的完成时间开始计算。&lt;/p&gt;
&lt;p&gt;如间隔 3 秒，每个任务耗时 2 秒：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Scheduled&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;fixedDelay &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 3000&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;errorSpiderRerun&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(){&lt;/span&gt;
    LocalDateTime localDateTime &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; LocalDateTime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;now&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
    System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;start &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; localDateTime&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        Thread&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sleep&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2000&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;InterruptedException e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;end &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; LocalDateTime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;now&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;结果如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;start 2020-06-02T15:49:59.650
end 2020-06-02T15:50:01.651
start 2020-06-02T15:50:04.653
end 2020-06-02T15:50:06.653
start 2020-06-02T15:50:09.654
end 2020-06-02T15:50:11.655
start 2020-06-02T15:50:14.657
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;fixedrate&#34;&gt;fixedRate&lt;/h2&gt;
&lt;p&gt;需要固定速率，则使用 &lt;code&gt;fixedRate&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;如间隔 3 秒，每个任务耗时 2 秒：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Scheduled&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;fixedRate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 3000&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;errorSpiderRerun&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(){&lt;/span&gt;
    LocalDateTime localDateTime &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; LocalDateTime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;now&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
    System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;start &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; localDateTime&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        Thread&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sleep&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2000&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;InterruptedException e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;end &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; LocalDateTime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;now&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;结果如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;start 2020-06-02T15:58:03.563
end 2020-06-02T15:58:05.563
start 2020-06-02T15:58:06.563
end 2020-06-02T15:58:08.563
start 2020-06-02T15:58:09.563
end 2020-06-02T15:58:11.563
start 2020-06-02T15:58:12.563
end 2020-06-02T15:58:14.563
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;但是若上个任务耗时超过间隔，则下一次也需要在等待，等到结束后下一次立刻执行。&lt;/p&gt;
&lt;p&gt;如等待 7 秒后结果如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;start 2020-06-02T16:02:37.726
end 2020-06-02T16:02:44.727
start 2020-06-02T16:02:44.727
end 2020-06-02T16:02:51.727
start 2020-06-02T16:02:51.727
end 2020-06-02T16:02:58.727
start 2020-06-02T16:02:58.727
end 2020-06-02T16:03:05.728
start 2020-06-02T16:03:05.728

&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;initialdelay&#34;&gt;initialDelay&lt;/h2&gt;
&lt;p&gt;默认项目启动立即执行定时任务，若想要延迟，使用 &lt;code&gt;initialDelay&lt;/code&gt; 参数。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Scheduled&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;initialDelay &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 10000&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; fixedRate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 3000&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;结果如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2020-06-02 16:09:00.487 [main] INFO  com.jztdata.label.LabelApplication - Started LabelApplication in 4.901 seconds (JVM running for 5.689)  
start 2020-06-02T16:09:10.467
end 2020-06-02T16:09:15.468
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;cron-表达式&#34;&gt;cron 表达式&lt;/h2&gt;
&lt;p&gt;用法太多了，每次项目用到就记一下吧。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;表达式&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1 2 3 * * ? *&lt;/td&gt;
&lt;td&gt;每天 3 点 2 分 1 秒执行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1 2 3 L * ? *&lt;/td&gt;
&lt;td&gt;每月最后一天 3 点 2 分 1 秒执行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1 2 3 4 * ? *&lt;/td&gt;
&lt;td&gt;每月 4 号 3 点 2 分 1 秒执行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0 0 12 ? * WED&lt;/td&gt;
&lt;td&gt;每周三执行&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
- https://helloqb.xyz/post/2020/0602_cron/ - ©DRay. 本站遵循 CC-BY-NC 4.0 协议</description>
        </item>
    
    
    
        <item>
        <title>RabbitMQ 实现跨语言通信</title>
        <link>https://helloqb.xyz/post/2020/0515_rabbitmq/</link>
        <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
        
        <guid>https://helloqb.xyz/post/2020/0515_rabbitmq/</guid>
        <description>哲学家 https://helloqb.xyz/post/2020/0515_rabbitmq/ -&lt;h1 id=&#34;需求场景&#34;&gt;需求场景&lt;/h1&gt;
&lt;p&gt;做项目时遇到需要 Java 和 Python 通信的场景，摸索到了三种解决方案，并都正式在项目中实施过、踩坑过、改进过、整个推翻替换过。&lt;/p&gt;
&lt;p&gt;其中 RabbitMQ 是我最终的方案，所以会重点阐述，其中略带提一下。&lt;/p&gt;
&lt;h1 id=&#34;三种方式的实现&#34;&gt;三种方式的实现&lt;/h1&gt;
&lt;h2 id=&#34;1-直接调用&#34;&gt;1. 直接调用&lt;/h2&gt;
&lt;p&gt;有 &lt;code&gt;ProcessBuilder&lt;/code&gt; 和 &lt;code&gt;Runtime.exec()&lt;/code&gt; 两种方法，用法差不多，都可以传一个字符串数组。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; command &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; String&lt;span style=&#34;color:#f92672&#34;&gt;[]{&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;python&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\\Users\\lenovo\\Desktop\\java2python.py&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;};&lt;/span&gt;
proc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Runtime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getRuntime&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;exec&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;command&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 执行py文件
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;ProcessBuilder&lt;/code&gt; 可以是列表，官方推荐 &lt;code&gt;ProcessBuilder&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; command &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; ArrayList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
command&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;python&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
command&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\\Users\\lenovo\\Desktop\\java2python.py&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
ProcessBuilder pb &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; ProcessBuilder&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;command&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
proc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;Process&lt;/code&gt; 提供 &lt;code&gt;InputStream&lt;/code&gt; 和 &lt;code&gt;ErrorStream&lt;/code&gt; 接收返回结果；为方便起见，可以将错误流重定向到输入流。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;pb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;redirectErrorStream&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//错误流重定向
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;BufferedReader in &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; BufferedReader&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; InputStreamReader&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;proc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getInputStream&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;若需要立即获取其返回结果，需要用 &lt;code&gt;waitFor()&lt;/code&gt; 方法。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//导致当前线程等待，如有必要，直到由此Process对象表示的进程已终止
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;code &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; proc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;waitFor&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;坑不坑：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Java 自带，开发方便（这个很重要&amp;hellip;&amp;hellip;老板就给你两天时间你能怎么办）。&lt;/li&gt;
&lt;li&gt;作为一个进程开启，效率低，好在是官方类，使用时感觉控制的还行。&lt;/li&gt;
&lt;li&gt;返回结果难以接收。可以通过输入流或者写入文件读取，但是都很不好。&lt;/li&gt;
&lt;li&gt;目前只尝试了 Java 调用 Python，反过来感觉很难。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;完整代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Test&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;java2pythonTest&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(){&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; code &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 1&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
  Process proc&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;// Runtime.getRuntime()
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//			String[] command = new String[]{&amp;#34;python&amp;#34;, &amp;#34;C:\\Users\\lenovo\\Desktop\\java2python.py&amp;#34;};
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//      proc = Runtime.getRuntime().exec(command);// 执行py文件
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
    List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; command &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; ArrayList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
    command&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;python&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    command&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\\Users\\lenovo\\Desktop\\java2python.py&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    ProcessBuilder pb &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; ProcessBuilder&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;command&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    pb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;redirectErrorStream&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//错误流重定向
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    proc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;//用输入输出流来截取结果
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    BufferedReader in &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; BufferedReader&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; InputStreamReader&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;proc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getInputStream&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gbk&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;));&lt;/span&gt;
    String line &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;((&lt;/span&gt;line &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; in&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;readLine&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
      System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;python&amp;gt; &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; line&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    in&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;//导致当前线程等待，如有必要，直到由此Process对象表示的进程已终止
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    code &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; proc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;waitFor&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
    System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;python&amp;gt; wait for code: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; code&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IOException e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;InterruptedException e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2-通过-api-通信&#34;&gt;2. 通过 API 通信&lt;/h2&gt;
&lt;p&gt;两端都启动为一个 Web 项目，Java 端可以采用 &lt;code&gt;Spring Boot&lt;/code&gt; 框架，Python 端用 &lt;code&gt;Flask&lt;/code&gt; 框架。然后通过 &lt;code&gt;Spring Cloud&lt;/code&gt; 来连接。&lt;/p&gt;
&lt;p&gt;由于 &lt;code&gt;Spring Cloud&lt;/code&gt; 非本人搭建，就不讲了。当然，你也没必要非要使用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;坑不坑：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;两端通信频繁的情况下，相对于第一种方案更好些&lt;/li&gt;
&lt;li&gt;开发有点烦，尤其是数据传输，如果用 &lt;code&gt;Spring Cloud&lt;/code&gt; 会好些&lt;/li&gt;
&lt;li&gt;不适用于等待的情况，如 Python 端计算量大，没法立刻给出结果。Api 嘛，时间长肯定不太好&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-rabbitmq-消息队列&#34;&gt;3. RabbitMQ 消息队列&lt;/h2&gt;
&lt;p&gt;因为实际公司开发中，Python 端计算量很大，需要等待很久，所以方法二也不太适用，后面有同事提出用消息队列的方式，可以不必等待，正好满足我的情况。&lt;/p&gt;
&lt;p&gt;RabbitMQ 不仅要有接收端、发送端，还需要安装管理器。&lt;/p&gt;
&lt;h3 id=&#34;管理系统&#34;&gt;管理系统&lt;/h3&gt;
&lt;p&gt;管理系统各平台都有，也有 docker 镜像。具体不赘述，看官网就行了。&lt;/p&gt;
&lt;p&gt;安装后会有 Web 端图形界面，使用很方便，不需要命令行就可以完成。&lt;/p&gt;
&lt;p&gt;大概介绍下用到的一些概念，后续深入的话再补充。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Virtual Hosts&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;相当于 Mysql 的库，相互独立，exchange、queue、message 不能互通。需要账户管理员权限。Web 端操作如下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://4fhota.dm.files.1drv.com/y4m8ssy6_IOEEMM-61Xim9dXVPqGXAFr3Z_RoNVyZLoNzHN9PQhwzZj8-3AcYN8cRrF4T5aTQ7oFlKNyeNwyoG0jAxkWBbszJdGw2HGVFlxkvVyiPM8fazvGt7I6X4QM0JpdCQj9q4U2Vd057K-Lr79wHjloJGyOEVpf3fgbgfClyrMb3Is40we--Ynuirt4zKuWXPW0tDyQJSZNrnu2uTVcg?width=1901&amp;height=583&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Queue&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;队列，基本通信模块，相当于一个消息缓冲区，消息进到队列里，再被发送出去。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://4vhota.dm.files.1drv.com/y4mHDkl9htpAR-UW-uVpdqrn3kaunkMdLUY9A6WiphfaJH3abuSMwSV1Io_w2BOpUcVNnn1HW1qQfNqilH5e9w4kLZHf-Alq4RrEtLkS1PaTHgJwwuZSqdWdgYODKNeNDunP2GRtRuoO16LLg3DklXZeePT-xvjIGB1OqR01Zj0tqrRnf_0bjAZ_T_0OsYPFfui4in6-_nrw-X8zNKw88oHAw?width=1898&amp;height=716&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Exchange&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;生产者发送消息时由 Exchange 来决定要给哪个 Queue。具体有 Direct、Fanout、Topic、Headers 四种类型，我用默认的一对一也就没有仔细了解。&lt;/p&gt;
&lt;h3 id=&#34;java-端实现&#34;&gt;Java 端实现&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;配置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我采用 &lt;code&gt;Spring Boot&lt;/code&gt; 框架，自带 &lt;code&gt;Spring AMQP&lt;/code&gt; 兼容 RabbitMQ，很方便推荐使用。直接在 yml 文件中配置相关参数。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;spring&lt;/span&gt;:
  &lt;span style=&#34;color:#66d9ef&#34;&gt;rabbitmq&lt;/span&gt;:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;host&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;192.168.0.102&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;port&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;5672&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;username&lt;/span&gt;: admin
    &lt;span style=&#34;color:#66d9ef&#34;&gt;password&lt;/span&gt;: admin
    &lt;span style=&#34;color:#66d9ef&#34;&gt;virtual-host&lt;/span&gt;: test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;发送消息&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;AmqpTemplate 类用于发送消息，我写了个定时 3 秒发送时间：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Component&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;TestScheduled&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;//rabbitMQ Queue
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;final&lt;/span&gt; String PYTHON2JAVA &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;python2java&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;final&lt;/span&gt; String JAVA2PYTHON &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;java2python&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Autowired&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; AmqpTemplate rabbitTemplate&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Scheduled&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;fixedDelay &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 3000&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;errorSpiderRerun&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(){&lt;/span&gt;
        String now &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; LocalDateTime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;now&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
        String content &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;java2python and now &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; now&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
        System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;content&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
        rabbitTemplate&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;convertAndSend&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;JAVA2PYTHON&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; content&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果没有客户端接收的话，会一直在队列中，Web 页面下可以看到：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://2lhota.dm.files.1drv.com/y4mJzu23NfL92LZyK4mv2xfcPaF1I41GtqfFnGK9bHFXt7oiYN3IdXhY2PtTqBZ4OwZH7eJECqQrB5BgiQONGxYGUGfgDl4Zuax9aLTfAfK8gE0jbDihMJRGmkarzl5Fubt-Uw9sEPqfrTzblJ3uYm8z8u_Ety07JT6qrwERGA858juJE8A5gqq75UPXL-JNIeNDfq5SK-DzQEz8xJMV21Fuw?width=1873&amp;height=805&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;接收消息&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;接收消息也非常简单，只需要添加 &lt;code&gt;@RabbitListener&lt;/code&gt; 注解即可。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@RabbitListener&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;queues &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; PYTHON2JAVA&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;listen&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String message&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;message&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;python-端实现&#34;&gt;Python 端实现&lt;/h3&gt;
&lt;p&gt;Python 端需要安装第三方库 &lt;code&gt;pika&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;建立连接&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_connect&lt;/span&gt;():
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    连接
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    :return: 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    config_pika_username &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;
    cofig_pika_password &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;
    config_pika_host &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;192.168.0.102&amp;#34;&lt;/span&gt;
    config_pika_port &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5672&lt;/span&gt;
    config_pika_virtual_host &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;
    cred &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pika&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlainCredentials(config_pika_username, cofig_pika_password)
    connection &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pika&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BlockingConnection(
        pika&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ConnectionParameters(
            host&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;config_pika_host,
            port&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;config_pika_port,
            virtual_host&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;config_pika_virtual_host,
            credentials&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cred,
            heartbeat&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
        ))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; connection
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;定义回调函数&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;callback&lt;/span&gt;(ch, method, properties, body):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(body)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;等待接收&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;运行此方法，等待接收。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;():
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    start_consuming
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    :return: 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    channel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_connect()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;channel()
    channel&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;queue_declare(queue&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;java2python&amp;#39;&lt;/span&gt;, durable&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
    channel&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;basic_consume(queue&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;java2python&amp;#39;&lt;/span&gt;,
                          auto_ack&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True,
                          on_message_callback&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;callback)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; consumer_start&amp;#39;&lt;/span&gt;)
    channel&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;start_consuming()

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:
    build()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;发送消息&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;producer&lt;/span&gt;():
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&amp;#39;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    生产者
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    :param rabbit_body: 发送内容
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# 创建通道&lt;/span&gt;
    connection &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_connect()
    channel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; connection&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;channel()
    channel&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;queue_declare(queue&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;python2java&amp;#39;&lt;/span&gt;, durable&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)

    &lt;span style=&#34;color:#75715e&#34;&gt;# 发送内容&lt;/span&gt;
    message &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;python2java and now &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;now())
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(message)
    channel&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;basic_publish(exchange&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;, routing_key&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;python2java&amp;#39;&lt;/span&gt;, body&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;message)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;坑不坑：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;非长连接方式，效率相对接口方式更高。&lt;/li&gt;
&lt;li&gt;如果项目所用框架如 &lt;code&gt;Spring Boot&lt;/code&gt; 已经集成的话，开发会很方便。&lt;/li&gt;
&lt;li&gt;有担心长时间没有消息队列会断开连接的情况，也有遇到，但好像都已解决。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;后续&#34;&gt;后续&lt;/h1&gt;
&lt;p&gt;只是简单介绍用到的类和方法，流于表面，后续如果频繁使用的话，需要深入了解。&lt;/p&gt;
- https://helloqb.xyz/post/2020/0515_rabbitmq/ - ©DRay. 本站遵循 CC-BY-NC 4.0 协议</description>
        </item>
    
    
    
        <item>
        <title>油猴脚本初探</title>
        <link>https://helloqb.xyz/post/2020/0507_monkey/</link>
        <pubDate>Thu, 07 May 2020 00:00:00 +0000</pubDate>
        
        <guid>https://helloqb.xyz/post/2020/0507_monkey/</guid>
        <description>哲学家 https://helloqb.xyz/post/2020/0507_monkey/ -&lt;h1 id=&#34;认识&#34;&gt;认识&lt;/h1&gt;
&lt;p&gt;常言道，不装扩展的浏览器只能发挥它 40% 的能力。而扩展中不得不提的神器就是 &lt;strong&gt;油猴脚本&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;相对扩展来说，它更轻量，只作用于指定网站，占用内存少。所以在脚本和扩展实现相同功能的情况下，我都是优先选用脚本。&lt;/p&gt;
&lt;p&gt;个人认为油猴脚本就是一串 Javascript 代码，因而前端工程师很容易上手。作为后端工程师的我。。。应该也比较容易上手吧。开干！&lt;/p&gt;
&lt;h1 id=&#34;脚本编写&#34;&gt;脚本编写&lt;/h1&gt;
&lt;h2 id=&#34;开发环境&#34;&gt;开发环境&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Chrome：可以更方便的定位 DOM。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://violentmonkey.github.io/&#34;&gt;暴力猴&lt;/a&gt;：有个为此站点查找脚本的功能，很方便。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;需求&#34;&gt;需求&lt;/h2&gt;
&lt;p&gt;如果你像我一样，只是想在某个页面添加一个按钮，实现快速跳转的功能。而自己又非前端，后面的内容应该会帮到你。示例 js 很简单，前端大神的话直接无视看下元数据块的内容就行了。&lt;/p&gt;
&lt;p&gt;以 &lt;a href=&#34;https://torrentz2.eu/&#34;&gt;torrentz2&lt;/a&gt; 网站为例，该网站磁力链接无法跳转，现在实现点击某一按钮后跳转到谷歌或者弹出磁力链接。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://n0p2tw.dm.files.1drv.com/y4mwf-OEOC9M3hPuAM-cf25Kuwuv6zt5ylvqRo2epKZjLtA4T-g09hxwxwmkwUd8TmPDan_ZN3w5D19ZnXgCez_SHSTtCVxISYYkZxC7XOoW1XbQsOZ2j5rtJqWMehFYkvMOHNEEub1s7rISsqsfMEcLAWZyX9fufOKVcdMqfqR48NljJkC7Fm44ugpNmwi9KUFO8SJ2zIECjb-cWARSGuKOw?width=2850&amp;height=1566&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;元数据块metadata-block&#34;&gt;元数据块（Metadata Block）&lt;/h2&gt;
&lt;p&gt;用暴力猴新建脚本时，会默认创建基础的元数据块。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// ==UserScript==
// @name        New script - torrentz2.eu
// @namespace   Violentmonkey Scripts
// @match       *://torrentz2.eu/*
// @grant       none
// @version     1.0
// @author      -
// @description 2020/5/9 下午4:13:37
// ==/UserScript==
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt;：名称&lt;/li&gt;
&lt;li&gt;&lt;code&gt;namespace&lt;/code&gt;：命名空间，正式发布时需要&lt;/li&gt;
&lt;li&gt;&lt;code&gt;match&lt;/code&gt;：脚本适用网站，另外有个 &lt;code&gt;include&lt;/code&gt; 用法差不多，官网说这个匹配规则更安全些&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grant&lt;/code&gt;：控制特定 api 的使用，不常用，none 即可&lt;/li&gt;
&lt;li&gt;&lt;code&gt;version&lt;/code&gt;：版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;author&lt;/code&gt;：作者&lt;/li&gt;
&lt;li&gt;&lt;code&gt;description&lt;/code&gt;：描述&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其余我用到的有：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// ==UserScript==
// @require  http://ajax.googleapis.com/ajax/libs/jquery/2.1.0/jquery.min.js
// @run-at      document-idle
// ==/UserScript==
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;require&lt;/code&gt;：加载第三方库，比如 jquery&lt;/li&gt;
&lt;li&gt;&lt;code&gt;run-at&lt;/code&gt;：控制脚本在页面哪个阶段运行，如 document-idle 为将在页面和所有资源加载之后运行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我只是将个人用到的介绍下，详细请参考 &lt;a href=&#34;https://wiki.greasespot.net/Metadata_Block&#34;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;方案一额外添加按钮&#34;&gt;方案一：额外添加按钮&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;简单粗暴的在页面上添加一个很丑很丑的按钮。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;document.&lt;span style=&#34;color:#a6e22e&#34;&gt;createElement&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;input&amp;#34;&lt;/span&gt;);
&lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;button&amp;#34;&lt;/span&gt;;
&lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Custom Button&amp;#34;&lt;/span&gt;;
&lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setAttribute&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;style&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;font-size:18px;position:absolute;top:120px;right:40px;&amp;#34;&lt;/span&gt;);
document.&lt;span style=&#34;color:#a6e22e&#34;&gt;body&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;appendChild&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;然后为按钮添加点击事件。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;onclick&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;skipFunc&lt;/span&gt;;

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;skipFunc&lt;/span&gt;()
{
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;info_hash&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;querySelector&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#wrap &amp;gt; div.trackersvotebox &amp;gt; div.trackers &amp;gt; div&amp;#34;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;innerHTML&lt;/span&gt;
    window.&lt;span style=&#34;color:#a6e22e&#34;&gt;open&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.google.com/search?q=&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;info_hash&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;replace&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;info_hash: &amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;))
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;本示例中，需要获取 info_hash 内容，浏览器直接右键检查复制 Selector 选择器，用 &lt;code&gt;querySelector&lt;/code&gt; 方法定位即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://oep2tw.dm.files.1drv.com/y4mRJBSD9WJHd0CwRrDQhVP0ONFhdkWMYBehiV7rZjyvB3-sBXzqcryi1DDfzJMd4zmUi-AJX12sT1YT6ajvxyDwKhakGcMBBiAyyYJ3h2UJcfUdvgxvzBilqja0s0IxcrGstntjatrAlFqsB0zhiKsHCTw_9iPJCSvCumwrb_9ro6M0kCZe9ZdGSf1G4-ULs3uoQFpv_34xKnwHAt7HXtDCA?width=2440&amp;height=1248&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
&lt;p&gt;另外，&lt;code&gt;innerHTML&lt;/code&gt;、&lt;code&gt;window.open&lt;/code&gt; 等其他方法就不赘述了，最后展示如下图，点击会跳转至谷歌。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mup2tw.dm.files.1drv.com/y4mQQE9aEjU3z7R2DSA2BLQ2S37BNFaxSoxNyrfBaijR1lt5xhgEQL8S_KlaGt6LrMhbMSsjomvCRyV90Kqyzq268yqaYtiBag4GA2qSquOGsT5khQ5XdPAjnN0qJG0mGI-5kqHPfYSnhsxMLMWLvPQ5yPz-y937wDMwL-i3SOuhPIoudLAOW1k5rvleQRaz0iCL58o-MVqOFgrL3QDKgVvdw?width=2506&amp;height=1260&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
&lt;p&gt;丑哭了有没有。。整个用户脚本如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// ==UserScript==
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// @name        New script - torrentz2.eu
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// @namespace   Violentmonkey Scripts
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// @match       *://torrentz2.eu/*
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// @require  http://ajax.googleapis.com/ajax/libs/jquery/2.1.0/jquery.min.js
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// @grant       none
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// @run-at      document-idle
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// @version     1.0
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// @author      -
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// @description 2020/5/9 下午4:13:37
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// ==/UserScript==
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;// add button in top 
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;document.&lt;span style=&#34;color:#a6e22e&#34;&gt;createElement&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;input&amp;#34;&lt;/span&gt;);
&lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;button&amp;#34;&lt;/span&gt;;
&lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Button&amp;#34;&lt;/span&gt;;
&lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;onclick&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;showAlert&lt;/span&gt;;
&lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setAttribute&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;style&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;font-size:18px;position:absolute;top:120px;right:40px;&amp;#34;&lt;/span&gt;);
document.&lt;span style=&#34;color:#a6e22e&#34;&gt;body&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;appendChild&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt;); 
 
&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;showAlert&lt;/span&gt;()
{
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;info_hash&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;querySelector&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#wrap &amp;gt; div.trackersvotebox &amp;gt; div.trackers &amp;gt; div&amp;#34;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;innerHTML&lt;/span&gt;
    window.&lt;span style=&#34;color:#a6e22e&#34;&gt;open&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.google.com/search?q=&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;info_hash&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;replace&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;info_hash: &amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;))
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;方案二页面原有元素添加点击&#34;&gt;方案二：页面原有元素添加点击&lt;/h2&gt;
&lt;p&gt;在 info_hash 文本上添加点击事件，点击文本会跳转至谷歌。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;infoHash&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;querySelector&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#wrap &amp;gt; div.trackersvotebox &amp;gt; div.trackers &amp;gt; div&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;infoHash&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;onclick&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(){window.&lt;span style=&#34;color:#a6e22e&#34;&gt;open&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.google.com/search?q=&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;infoHash&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;innerHTML&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;replace&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;info_hash: &amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;))}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此方案完美隐藏，没有破坏原有页面。&lt;/p&gt;
&lt;h2 id=&#34;方案三按钮嵌入至页面&#34;&gt;方案三：按钮嵌入至页面&lt;/h2&gt;
&lt;p&gt;思路是在某一节点中，添加其子节点，以共用其子节点的样式。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;找到并复制兄弟节点的所有元素&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://mkp2tw.dm.files.1drv.com/y4mwJ-vDI3kdXN0d4tlY4NWG_7qCl1z_qNF6Dh2pwBCLqMFO11khPmuj5Td8meMFKrfhhlxbUfiE-M4o6DigxCRs04ryi2XFd97ZOUnZHUpizw5a6ual-L_aWX-l88sdjT3LxTWyljTqGr2J0crcF6V3gyJXNISzxIcF-ulrUeZIRarahXne7BG8mmpD7HH38N7wsyDCSraiiH3EzaVNVazFg?width=2694&amp;height=1120&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;找到父节点的 Selector 选择器&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://m0p2tw.dm.files.1drv.com/y4mv3MDuJh3PNL26ePCzDUQDiXFow1o2Oq4El5oqA90xemtOq30XCIp693BluvQ8xSaLrhFGiT1QknB3DIMSK9wu_CNBdTQZNJHvcsr8_Nt6dmKx4zlIk0IzlNRoehQbQxTf0pPbQFUCIdc0KqJuFS3TcF0CftGrKAnJPk11V1frDciHtUJ_Lz2z2A0JwwCag4iPLx0JbhCiwT8JlLhvkljyQ?width=2568&amp;height=1018&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;code&gt;appendTo&lt;/code&gt; 方法添加到父节点中&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;infoHash&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;querySelector&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#wrap &amp;gt; div.trackersvotebox &amp;gt; div.trackers &amp;gt; div&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;infoHashText&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;infoHash&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;innerHTML&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;replace&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;info_hash: &amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;$&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;a href=&amp;#34;https://www.google.com/search?q=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;infoHashText&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; target=&amp;#34;_blank&amp;#34; &amp;gt;Google&amp;lt;/a&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;appendTo&lt;/span&gt;(document.&lt;span style=&#34;color:#a6e22e&#34;&gt;querySelector&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#votebox &amp;gt; span.replist&amp;#34;&lt;/span&gt;));
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如下，完美嵌入。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://nep2tw.dm.files.1drv.com/y4mSwRdebaViBcA8QJYWi7p7VSERUEVDjw79nHi40kFO0UmUAULvTgAgvVhWAbrmyw0e35xIdVf6T5J9RBlwLsHXwCtRik3uZmzzOaDB3wmprrLMLZxtbAJvNeCZ9PE-bAhA7lyPe-ofR8lGoEzJGU_Qts4c7nqfATGJ_nXPlblQyAFH4selQBJzKmHRRn57PdKWFhmGT5VMB0AW2FH3Z1dkA?width=3146&amp;height=1602&amp;cropmode=none&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;推荐&#34;&gt;推荐&lt;/h1&gt;
&lt;h2 id=&#34;网站链接&#34;&gt;网站链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://violentmonkey.github.io/&#34;&gt;暴力猴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://greasyfork.org/zh-CN&#34;&gt;Greasy Fork&lt;/a&gt;：脚本搜索&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sleazyfork.org/zh-CN&#34;&gt;Sleazy Fork&lt;/a&gt;：大人的 Greasy Fork&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.greasespot.net/Main_Page&#34;&gt;官方教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;自用脚本&#34;&gt;自用脚本&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://greasyfork.org/zh-CN/scripts/329484-%E8%B1%86%E7%93%A3%E8%B5%84%E6%BA%90%E4%B8%8B%E8%BD%BD%E5%A4%A7%E5%B8%88-1%E7%A7%92%E6%90%9E%E5%AE%9A%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1-%E9%9F%B3%E4%B9%90-%E5%9B%BE%E4%B9%A6%E4%B8%8B%E8%BD%BD&#34;&gt;豆瓣资源下载大师&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://greasyfork.org/zh-CN/scripts/378351-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0-csdn%E9%A1%B5%E9%9D%A2%E6%B5%AE%E7%AA%97%E5%B9%BF%E5%91%8A%E5%AE%8C%E5%85%A8%E8%BF%87%E6%BB%A4%E5%87%80%E5%8C%96-%E5%87%80%E5%8C%96%E5%A4%8D%E5%88%B6%E5%86%85%E5%AE%B9-%E8%87%AA%E5%8A%A8%E5%B1%95%E5%BC%80-%E8%AE%A9%E4%BD%A0%E4%B8%93%E6%B3%A8%E4%BA%8E%E6%96%87%E7%AB%A0-%E4%B8%8D%E5%BD%B1%E5%93%8D%E5%8A%9F%E8%83%BD%E4%BD%BF%E7%94%A8&#34;&gt;CSDN页面浮窗广告完全过滤净化&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://helloqb.xyz/post/2020/0507_monkey/ - ©DRay. 本站遵循 CC-BY-NC 4.0 协议</description>
        </item>
    
    
    
        <item>
        <title>锤子阅读文章搜索</title>
        <link>https://helloqb.xyz/post/2020/0311_python/</link>
        <pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate>
        
        <guid>https://helloqb.xyz/post/2020/0311_python/</guid>
        <description>哲学家 https://helloqb.xyz/post/2020/0311_python/ -&lt;h1 id=&#34;缘由&#34;&gt;缘由&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;之前找大象公会一篇文章，在公众号里被屏蔽了，发现锤子阅读里的竟然还可以看，可能存到自己的服务器上了吧。以后文章封了可以在这里找找。&lt;/li&gt;
&lt;li&gt;锤子阅读不支持文章搜索，有时候想要找个文章难。&lt;/li&gt;
&lt;li&gt;划水好无聊。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;脚本调用&#34;&gt;脚本调用&lt;/h1&gt;
&lt;p&gt;使用 Python3 编写，单个文件，无第三方库。结果有命令行和文本两种输出方式，具体参数如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-h 帮助文档&lt;/li&gt;
&lt;li&gt;-s 订阅号名称&lt;/li&gt;
&lt;li&gt;-k 搜索关键词，不填返回最新的文章&lt;/li&gt;
&lt;li&gt;-n 返回文章数，默认10&lt;/li&gt;
&lt;li&gt;-m 搜索匹配等级，默认1匹配标题 2匹配标题和摘要&lt;/li&gt;
&lt;li&gt;-o 输出方式， 默认1命令行输出 2写入本地文件到当前目录&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;代码&#34;&gt;代码&lt;/h1&gt;
&lt;p&gt;就 200 行代码，直接贴出来了，不放到 Github 上了。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;附锤子阅读APP下载 &lt;a href=&#34;https://www.smartisan.com/apps/#/reader&#34;&gt;链接&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; requests
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sys
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; getopt

PAGE_SIZE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;
TEMP_FILE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;result.md&amp;#39;&lt;/span&gt;


&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;api_site_articles&lt;/span&gt;(site_id, offset, page_size):
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;订阅号文章列表的接口json返回结果
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    :param site_id:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    :param offset:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    :param page_size:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    :return:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    params &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;site_id&amp;#39;&lt;/span&gt;: site_id,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;offset&amp;#39;&lt;/span&gt;: offset,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;page_size&amp;#39;&lt;/span&gt;: page_size
    }
    url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://reader.smartisan.com/index.php?r=article/getList&amp;#39;&lt;/span&gt;
    response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; requests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(url, params)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;json()


&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;api_search_site&lt;/span&gt;(name, offset, page_size):
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;搜索订阅号的接口json返回结果
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    :param name:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    :param offset:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    :param page_size:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    :return:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    params &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;: name,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;offset&amp;#39;&lt;/span&gt;: offset,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;page_size&amp;#39;&lt;/span&gt;: page_size
    }
    url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://reader.smartisan.com/index.php?r=site/search&amp;#39;&lt;/span&gt;
    response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; requests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(url, params)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;json()


&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;search_site&lt;/span&gt;(name):
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;订阅号搜索
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    有结果返回第一个，无结果返回空
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    :param name:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    :return:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; api_search_site(name, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; result[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;list&amp;#39;&lt;/span&gt;]:
        site_json &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; result[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;list&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
        site_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; site_json[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]
        site_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; site_json[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;]
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; site_id, site_name
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; None, None


&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;search_titles&lt;/span&gt;(site_id, offset, page_size, search_name, match_level):
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;根据搜索关键词返回文章
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    :param site_id:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    :param offset:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    :param page_size:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    :param search_name:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    :param match_level:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    :return:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    title_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
    result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; api_site_articles(site_id, offset, page_size)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; result[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;list&amp;#39;&lt;/span&gt;]:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; search_name:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; i&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(search_name) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:
                title_list&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(i)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; match_level &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:
                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; i&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;brief&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(search_name) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:
                    title_list&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(i)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
            title_list&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(i)

    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; title_list


&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_article_count&lt;/span&gt;(site_id):
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;返回当前订阅号的文章总数
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    :param site_id:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    :return:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; api_site_articles(site_id, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
    count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; result[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;count&amp;#39;&lt;/span&gt;]
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; int(count)


&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_args&lt;/span&gt;():
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    编写此脚本的理由：
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        1. 锤子阅读不支持文章搜索功能
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        2. 锤子阅读的文章是经过转码的, 可能会在自己服务器上保留，可用于被封文章查询
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    参数定义：
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        -h    帮助文档
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        -s    订阅号名称
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        -k    搜索关键词，不填返回最新的文章
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        -n    返回文章数，默认10 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        -m    搜索匹配等级，默认1匹配标题 2匹配标题和摘要
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        -o    输出方式， 默认1命令行输出 2写入本地文件到当前目录
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    返回：
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        文章标题和文章链接
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    附：
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        锤子阅读官网：https://www.smartisan.com/apps/#/reader
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

    site &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
    keyword &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
    num &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;
    match_level &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    output &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
        opts, args &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getopt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getopt(sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:], &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hs:k:n:m:o:&amp;#39;&lt;/span&gt;, [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;help=&amp;#39;&lt;/span&gt;])
    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; getopt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;GetoptError:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Error ! Use -h or --help to show this help message&amp;#39;&lt;/span&gt;)
        sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; opt, arg &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; opts:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; opt &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-h&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--help&amp;#39;&lt;/span&gt;):
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(get_args&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;__doc__)
            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; opt &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-s&amp;#39;&lt;/span&gt;:
            site &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; arg
        &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; opt &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-k&amp;#39;&lt;/span&gt;:
            keyword &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; arg
        &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; opt &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-n&amp;#39;&lt;/span&gt;:
            num &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(arg)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; opt &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-m&amp;#39;&lt;/span&gt;:
            match_level &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(arg)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; opt &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-o&amp;#39;&lt;/span&gt;:
            output &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(arg)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; site, keyword, num, match_level, output


&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main_by_args&lt;/span&gt;(site, keyword, num, match_level, output):

    &lt;span style=&#34;color:#75715e&#34;&gt;# 查找订阅号site_id&lt;/span&gt;
    site_id, site_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; search_site(site)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; site_id:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;订阅号不存在&amp;#34;&lt;/span&gt;)
        exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;正在搜索 {} 的文章&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(site_name))

    &lt;span style=&#34;color:#75715e&#34;&gt;# 获取当前订阅号文章总数，计算遍历最高次数&lt;/span&gt;
    count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_article_count(site_id)
    range_count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(count &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; PAGE_SIZE) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;# 遍历查找&lt;/span&gt;
    search_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(range_count):
        titles &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; search_titles(site_id, i, PAGE_SIZE, keyword, match_level)
        search_list&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;extend(titles)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(search_list) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; num:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;# 输出&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; search_list:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;无搜索结果&amp;#34;&lt;/span&gt;)
        exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        search_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; search_list[:num]
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; output &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; search_list:
                &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{0} {1}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(i&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;), i&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;origin_url&amp;#39;&lt;/span&gt;)))
        &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; output &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; open(TEMP_FILE, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;, encoding&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; f:
                &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; search_list:
                    f&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;[{}]({})&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(i&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;), i&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;origin_url&amp;#39;&lt;/span&gt;)))
                    f&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)
                    f&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;结果已成功写入 {} 中&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(TEMP_FILE))


&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;():
    site, keyword, num, match_level, output &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_args()
    main_by_args(site, keyword, num, match_level, output)


&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:
    &lt;span style=&#34;color:#75715e&#34;&gt;# main_by_args(&amp;#39;大象公会&amp;#39;, &amp;#39;同性恋&amp;#39;, 10, 1, 1)  # debug&lt;/span&gt;
    main()

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;- https://helloqb.xyz/post/2020/0311_python/ - ©DRay. 本站遵循 CC-BY-NC 4.0 协议</description>
        </item>
    
    
    
        <item>
        <title>SpringMVC 下载文本实现边转码边下载</title>
        <link>https://helloqb.xyz/post/2020/0304_java/</link>
        <pubDate>Wed, 04 Mar 2020 00:00:00 +0000</pubDate>
        
        <guid>https://helloqb.xyz/post/2020/0304_java/</guid>
        <description>哲学家 https://helloqb.xyz/post/2020/0304_java/ -&lt;h1 id=&#34;方案一-printwriter--characterencoding&#34;&gt;方案一： PrintWriter + CharacterEncoding&lt;/h1&gt;
&lt;p&gt;SpringMVC 框架的接口中 Response 有 &lt;code&gt;ServletOutputStream&lt;/code&gt; 和 &lt;code&gt;PrintWriter&lt;/code&gt; 两种输出，还有一个 &lt;code&gt;setCharacterEncoding&lt;/code&gt; 方法。&lt;/p&gt;
&lt;p&gt;OutPutStream 视为写入二进制数据，容器不对二进制数据进行编码，即 &lt;code&gt;setCharacterEncoding&lt;/code&gt; 无效。所以先采用 &lt;code&gt;PrintWriter&lt;/code&gt; 搭配 &lt;code&gt;setCharacterEncoding&lt;/code&gt; 方法。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@GetMapping&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/downloadFile1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;downloadFile1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;HttpServletResponse response&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; IOException&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;//读取本地文件
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    File file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; File&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;LOCAL_FILE_PATH&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    BufferedReader bufferedReader &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; BufferedReader&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; InputStreamReader&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; FileInputStream&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;file&lt;span style=&#34;color:#f92672&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;));&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;//设置下载
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setHeader&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Disposition&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;attachment;filename=file.csv&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setContentType&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;application/octet-stream&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setCharacterEncoding&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GB2312&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;//传输
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    BufferedWriter bufferedWriter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; BufferedWriter&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getWriter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
    String line&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;((&lt;/span&gt;line &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; bufferedReader&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;readLine&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        bufferedWriter&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;write&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;line &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\r\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
        bufferedWriter&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;flush&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    bufferedReader&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
    bufferedWriter&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;无用，没有仔细研究，应该 &lt;code&gt;setCharacterEncoding&lt;/code&gt; 只是告诉浏览器是什么编码，没有解码功能。&lt;/p&gt;
&lt;h1 id=&#34;方案二servletoutputstream--outputstreamwriter&#34;&gt;方案二：ServletOutputStream + OutputStreamWriter&lt;/h1&gt;
&lt;p&gt;将 &lt;code&gt;response.getOutputStream()&lt;/code&gt; 获取到的流用 &lt;code&gt;OutputStreamWriter&lt;/code&gt; 包装。结果可行。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@GetMapping&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/downloadFile2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;downloadFile2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;HttpServletResponse response&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; IOException&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;//读取本地文件
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    File file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; File&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;LOCAL_FILE_PATH&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    BufferedReader bufferedReader &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; BufferedReader&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; InputStreamReader&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; FileInputStream&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;file&lt;span style=&#34;color:#f92672&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;));&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;//设置下载
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setHeader&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Disposition&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;attachment;filename=file.csv&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setContentType&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;application/octet-stream&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;//传输
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    OutputStreamWriter writerStream &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; OutputStreamWriter&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getOutputStream&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(),&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GBK&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    String line&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;((&lt;/span&gt;line &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; bufferedReader&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;readLine&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        writerStream&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;write&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;line &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\r\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
        writerStream&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;flush&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    bufferedReader&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
    writerStream&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;方案三servletoutputstream--getbytes&#34;&gt;方案三：ServletOutputStream + getBytes&lt;/h1&gt;
&lt;p&gt;在按行写入字符串时，使用 &lt;code&gt;getBytes&lt;/code&gt; 方法将字符串转换为想要输出的编码格式。结果可行。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@GetMapping&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/downloadFile3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;downloadFile3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;HttpServletResponse response&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; IOException&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;//读取本地文件
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    File file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; File&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;LOCAL_FILE_PATH&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    BufferedReader bufferedReader &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; BufferedReader&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; InputStreamReader&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; FileInputStream&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;file&lt;span style=&#34;color:#f92672&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;));&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;//设置下载
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setHeader&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Disposition&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;attachment;filename=file.csv&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setContentType&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;application/octet-stream&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;//传输
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    OutputStream outputStream &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getOutputStream&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
    String line&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;((&lt;/span&gt;line &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; bufferedReader&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;readLine&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        outputStream&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;write&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;((&lt;/span&gt;line &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\r\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getBytes&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GB2312&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;));&lt;/span&gt;
        outputStream&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;flush&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    bufferedReader&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
    outputStream&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;无需转码的写法&#34;&gt;无需转码的写法&lt;/h1&gt;
&lt;p&gt;若不需要转码的话，就很简短了，用字节流就行了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@GetMapping&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/downloadFile4&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;downloadFile4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;HttpServletResponse response&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; IOException&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;//读取本地文件
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    File file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; File&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;LOCAL_FILE_PATH&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    FileInputStream fis &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; FileInputStream&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;file&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;//设置下载
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setHeader&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Disposition&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;attachment;filename=file.csv&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setContentType&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;application/octet-stream&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;//传输
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    OutputStream os &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getOutputStream&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; buffer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;4096&lt;span style=&#34;color:#f92672&#34;&gt;];&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;((&lt;/span&gt;b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fis&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;read&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;buffer&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;write&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;buffer&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 0&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; b&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    fis&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
    os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;简写的话可以用第三方包。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; org.springframework.util.FileCopyUtils&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;@GetMapping&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/downloadFile5&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;downloadFile5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;HttpServletResponse response&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; IOException&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;//读取本地文件
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    File file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; File&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;LOCAL_FILE_PATH&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    InputStream inputStream&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; BufferedInputStream&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; FileInputStream&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;file&lt;span style=&#34;color:#f92672&#34;&gt;));&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;//设置下载
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setHeader&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Disposition&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;attachment;filename=file.csv&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setContentType&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;application/octet-stream&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;//传输
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    FileCopyUtils&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;copy&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;inputStream&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getOutputStream&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;


&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;补充：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 Nginx 可以不通过接口前端直接下载，后续可以尝试采用此方法。&lt;/li&gt;
&lt;/ul&gt;- https://helloqb.xyz/post/2020/0304_java/ - ©DRay. 本站遵循 CC-BY-NC 4.0 协议</description>
        </item>
    
    
  </channel>
</rss> 