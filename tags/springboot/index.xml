<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Springboot on 哲学家</title>
    <link>https://helloqb.xyz/tags/springboot/</link>
    <description>Recent content in Springboot on 哲学家</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>©DRay. 本站遵循 CC-BY-NC 4.0 协议</copyright>
    <lastBuildDate>Tue, 02 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://helloqb.xyz/tags/springboot/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spring 定时任务</title>
      <link>https://helloqb.xyz/post/2020/0602_cron/</link>
      <pubDate>Tue, 02 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://helloqb.xyz/post/2020/0602_cron/</guid>
      <description>介绍 本文主要记录下 cron 表达式的用法，方便下次使用。
配置 程序主入口添加 @SpringBootApplication 和 @EnableScheduling 注解以启动定时任务。
import org.springframework.boot.SpringApplication; import org.springframework.boot.autoconfigure.SpringBootApplication; import org.springframework.scheduling.annotation.EnableScheduling; @SpringBootApplication @EnableScheduling public class SchedulingTasksApplication { public static void main(String[] args) { SpringApplication.run(SchedulingTasksApplication.class); } } 然后方法上添加 @Scheduled 注解就行了。当然类注解 @Component 也必不可少。
@Scheduled(fixedDelay = 5000) public void reportCurrentTime() { System.out.println(new Date()); } 定时调度 fixedDelay
毫秒单位，以上一个调用的完成时间开始计算 如间隔 3 秒，每个任务耗时 2 秒：
@Scheduled(fixedDelay = 3000) public void errorSpiderRerun(){ LocalDateTime localDateTime = LocalDateTime.now(); System.out.println(&amp;#34;start &amp;#34; + localDateTime); try { Thread.</description>
    </item>
    
  </channel>
</rss>