<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BigDecimal on 哲学家</title>
    <link>https://helloqb.xyz/tags/bigdecimal/</link>
    <description>Recent content in BigDecimal on 哲学家</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>©DRay. 本站遵循 CC-BY-NC 4.0 协议</copyright>
    <lastBuildDate>Tue, 07 Jul 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://helloqb.xyz/tags/bigdecimal/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用 BigDecimal 和 DecimalFormat 计算</title>
      <link>https://helloqb.xyz/post/2020/0707_decimal/</link>
      <pubDate>Tue, 07 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://helloqb.xyz/post/2020/0707_decimal/</guid>
      <description>介绍 本文主要记录下 BigDecimal 和 DecimalFormat 类的用法，方便下次使用。
 BigDecimal 可以更精确的进行小数点运算。 DecimalFormat 可以更好的进行与科学计算法之间的换算和保留有效数字。  BigDecimal 加减乘除等 import java.math.BigDecimal; new BigDecimal(&amp;#34;3.1&amp;#34;).add(new BigDecimal(&amp;#34;1.2&amp;#34;));//加 new BigDecimal(&amp;#34;3.1&amp;#34;).subtract(new BigDecimal(&amp;#34;1.2&amp;#34;));//减 new BigDecimal(&amp;#34;3.1&amp;#34;).multiply(new BigDecimal(&amp;#34;1.2&amp;#34;));//乘 new BigDecimal(&amp;#34;3.1&amp;#34;).divide(new BigDecimal(&amp;#34;1.2&amp;#34;), 2);//除 new BigDecimal(&amp;#34;3.1&amp;#34;).max(new BigDecimal(&amp;#34;1.2&amp;#34;));//最大值 new BigDecimal(&amp;#34;3.1&amp;#34;).compareTo(new BigDecimal(&amp;#34;1.2&amp;#34;));//比较 四舍五入 BigDecimal.ROUND_UP：不降低计算值的大小(和正负无关)
//不降低计算值的大小（不考虑负号） new BigDecimal(&amp;#34;1.345&amp;#34;).setScale(2, BigDecimal.ROUND_UP); //1.35 new BigDecimal(&amp;#34;1.346&amp;#34;).setScale(2, BigDecimal.ROUND_UP); //1.35 new BigDecimal(&amp;#34;-1.345&amp;#34;).setScale(2, BigDecimal.ROUND_UP); //-1.35 new BigDecimal(&amp;#34;-1.346&amp;#34;).setScale(2, BigDecimal.ROUND_UP); //-1.35 BigDecimal.ROUND_DOWN：不增加计算值的大小(和正负无关)
//不增加计算值的大小（不考虑负号） new BigDecimal(&amp;#34;1.345&amp;#34;).setScale(2, BigDecimal.ROUND_DOWN); //1.34 new BigDecimal(&amp;#34;1.346&amp;#34;).setScale(2, BigDecimal.ROUND_DOWN); //1.34 new BigDecimal(&amp;#34;-1.345&amp;#34;).setScale(2, BigDecimal.ROUND_DOWN); //-1.34 new BigDecimal(&amp;#34;-1.346&amp;#34;).setScale(2, BigDecimal.</description>
    </item>
    
  </channel>
</rss>
