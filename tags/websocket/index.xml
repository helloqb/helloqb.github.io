<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>websocket on 哲学家</title>
    <link>https://helloqb.xyz/tags/websocket.html</link>
    <description>Recent content in websocket on 哲学家</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>©DRay. 本站遵循 CC-BY-NC 4.0 协议</copyright>
    <lastBuildDate>Wed, 09 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://helloqb.xyz/tags/websocket/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Web 实现日志文件实时监听</title>
      <link>https://helloqb.xyz/post/2021/0609_tailer.html</link>
      <pubDate>Wed, 09 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://helloqb.xyz/post/2021/0609_tailer.html</guid>
      <description>思路 第一个想法，是 java 接收 tail 命令返回，然后通过 websocket 推送给前端。也搜到了有人利用此方法实现了。
但是个人觉得日志数据量较大，此方法效率偏低。巧的是，Apache Commons 包里已经帮忙实现了这个方法。
要注意的是，2.4 之前不支持中文。Commons 包较为常见，一开始我没有考虑版本，拿着 2.4 的包用，结果乱码，且没有相关参数指定编码，一度打算舍弃它。
实现 Apache Commons 包中的 Tailer 类实现了这个，一旦了解了这个类，实现起来就简单了。直接贴代码了。
websocket 入口
import org.apache.commons.io.input.Tailer; import org.apache.commons.io.input.TailerListener; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import org.springframework.stereotype.Component; import javax.websocket.OnClose; import javax.websocket.OnError; import javax.websocket.OnOpen; import javax.websocket.Session; import javax.websocket.server.PathParam; import javax.websocket.server.ServerEndpoint; import java.io.File; import java.util.concurrent.atomic.AtomicInteger; /** * websocket */ @ServerEndpoint(&amp;#34;/websocket/log/{sid}&amp;#34;) @Component public class WebSocketServerLog { private static Logger LOG = LoggerFactory.getLogger(WebSocketServerLog.class); private static AtomicInteger onlineCount = new AtomicInteger(0); private Tailer tailer; //接收sid  private String sid=&amp;#34;&amp;#34;; /** * 连接建立成功调用的方法 */ @OnOpen public void onOpen(Session session, @PathParam(&amp;#34;sid&amp;#34;) String sid) { addOnlineCount(); this.</description>
    </item>
    
  </channel>
</rss>
